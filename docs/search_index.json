[["index.html", "R Course Chapter 1 R - Introduction 1.1 R - Basic Concepts and applications 1.2 Why R? 1.3 R studio 1.4 Basic Mathematics like operators 1.5 R Markdown 1.6 Installation of packages 1.7 Assignment 1.8 CODE CHALLENGE", " R Course YOUR NAME HERE 2024-05-28 Chapter 1 R - Introduction 1.1 R - Basic Concepts and applications R (programming language) is a language and environment for statistical computing and graphics 1.2 Why R? Developed by Statisticians - R is Excellent for Statistical Computing and Analysis Open-source (Free) - R is an open-source programming language. Anyone can work with R without any license or fee. Due to this, R has a huge community that contributes to its environment. A Large Variety of Specialized Libraries - These libraries support and enhance the R development environment. R Studio - A graphic user interface to R - easier to grasp and learn. Cross-platform Support - R is machine-independent. It supports the cross-platform operation. Thus, it is usable on many different operating systems. Can do Data Cleansing, Data Wrangling, and Web Scraping - R can collect data from the internet through web scraping and other means. It can also perform data cleansing. R is also useful for data wrangling which is the process of converting raw data into the desired format for easier consumption. Powerful Graphics - R has extensive libraries that can produce production quality graphs and visualizations. Compatible with other Programming Languages - R is compatible with other languages like C, C++, and FORTRAN. Other languages like .NET, Java, Python can also directly manipulate objects. Compatible with high performance computing and Big Data Analytics. 1.3 R studio Rstudio is an integrated development environment(IDE) for R. It includes a console, syntax-highlighting editor that supports direct code execution as well as tools for plotting history, debugging and work space management. R studio is an open source software from posit and can be freely be downloaded from https://posit.co/download/rstudio-desktop/. This link has all the installation files for Mac, Linux and Windows. You will download the installation file and install based on your computer operating system. 1.3.1 RStudio - Look and Feel The image above is for R code in R Studio. Each quadrant has its own function. text editor serves as the primary interface for writing and editing R scripts, Markdown documents, and other text-based files stand input/output (console/terminal/jobs) It is the bottom left quadrant in R Studio that serves as a command-line interface where you can directly interact with R such as code execution and output display. all data and its properties quadrants It is the top right quadrant in Rstudio that is typically the “Environment” pane, which provides information and tools for managing your R environment such as data importation, display of variables. plots and file directory structure The bottom right quadrant in RStudio typically houses the “Files”, “Plots”, “Packages”, “Help”, and “Viewer” tabs. 1.4 Basic Mathematics like operators 1.4.1 Basics To do simple mathematical operations, the following operators are used; + for addition - for subtraction / for division * for multiplication The following examples will illustrates how to do simple arithmetic in R. Example eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIyKzMgIyBhZGRpdGlvbiJ9 Activity Your turn! Add 2398 to 4653 eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIEFkZCAyMzk4IHRvIDQ2NTMgXG4jIyBDb2RlIGhlcmUifQ== Example eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiI2LTIgI3N1YnRyYWN0aW9uIn0= Activity Your turn! Subtract 15 from 30 eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIFN1YnRyYWN0IDE1IGZyb20gMzBcbiMjIENvZGUgaGVyZSJ9 Example eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIxMCAqIDMgI211bHRpcGxpY2F0aW9uIn0= Activity Your turn! Multiply 12 by 7 eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIE11bHRpcGx5IDEyIGJ5IDdcbiMjIENvZGUgaGVyZSJ9 Example eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIzMC8xNSAjIGRpdmlzaW9uIn0= Activity Your turn! Divide 27 by 3 eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIERpdmlkZSAyNyBieSAzXG4jIyBDb2RlIGhlcmUifQ== Values can be assigned to variable names which will be instead of the values. For instance, in the example below, 30 is assigned to variablem and 15 is assigned to variable n. The solution of their difference is assigned to variable answer. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJtID0gMTVcbm4gPSAzMFxuYW5zd2VyID0gbSAtIG5cbmFuc3dlciJ9 Activity Your turn! Assign -5 to variable m and 20 to variable n and Add the two. Assign a variable answer to the sum of m and n. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJtID0gLTVcbm4gPSAyMFxuYW5zd2VyID0gbSArIG5cbmFuc3dlciJ9 1.4.2 BODMAS rule If there is are multiple different operators in a single expression then the BODMAS(Brackets, Orders (i.e., powers and square roots, etc.), Division and Multiplication, Addition and Subtraction) rule will apply when solving. Basic BODMAS eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJhbnN3ZXIgPSA1ICsgMiAqICgxMCAtIDQpXG5hbnN3ZXIifQ== The above expression is solved as follows; evaluate the brackets: (10 - 4) which is 6, then, perform multiplication: 2 * 6 which is 12, finally, addition: 5 + 12 which is 17. Activity Workout the below three equations and find their solutions; q1 = 2+3-9/3+4*21-(21+14) q2 = 5-3*(10+2)+10/5 q3 = 9/3*(2+3)+4 Solve them here eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjV29ya291dCB0aGUgZXF1YXRpb25zIGhlcmVcbiMjIENvZGUgaGVyZSJ9 Including Exponentiation eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJhbnN3ZXIgPSAoNiArIDQpIF4gMiAtIDMgKiA1XG5hbnN3ZXIifQ== The above equation is solved as follows; evaluate the brackets: (6 + 4) which is 10. then, perform exponentiation: 10 ^ 2 which is 100. then, perform multiplication: 3 * 5 which is 15. finally, subtraction: 100 - 15 which is 85. More Complex and Interesting BODMAS eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJhbnN3ZXIgPSAoMjAgLyA0KSArIDNeMiAqICgyICsgMSkgLSA1XG5hbnN3ZXIifQ== The above expression is solved as follows; evaluate the brackets: (20 / 4) which is 5 and (2 + 1) which is 3. perform exponentiation: 3^2 which is 9. perform multiplication: 9 * 3 which is 27. addition and subtraction in order: 5 + 27 which is 32, and 32 - 5 which is 27 NOTE: These operators are only applicable for numerical variables. 1.5 R Markdown R Markdown is a versatile markup language that allows you to create dynamic documents that integrate text, code, and output. It is widely used in data analysis, scientific research, and reporting The figure shows how markdown looks like Each chunk can be run separately in a single file, also the variable in one chunk can be reused by the next/later chunks Anything added outside the chuck will not be executed in the program The R markdown can be knitted to a html, pdf, or word file and presented to the audience 1.6 Installation of packages R libraries/packages can be installed by invoking install.packages(\"package_name\") to the console. The figure below shows how to install expn library. Alternatively, a package can be installed from the graphical user interface in R by clicking ‘tools’ tab then “install.packages”. A dialogue box will appear requesting you to enter the name of the package to be installed. Thereafter, click the ‘install’ button on the dialogue box to install the package. 1.7 Assignment Use the guide above to; Install R based on your computer operating system. Install RStudio Open an R Markdown file in RStudio and work on the code challenge below. 1.8 CODE CHALLENGE You have to use Base R to solve the questions below; If you have 3 apples and you buy 5 more apples. How many apples do you have in total? You have 10 candies and you give away 4 candies. How many candies do you have in total? Each pen costs 2 US dollars. If you bought 7 pens, how much did you spend in total? Solve the following equations; 34 + 54 76 - 10 25 * 25 if d=42 and f=14 evaluate d/f A rectangle has a length of 8 meters and width of 5 meters. What is the area of the rectangle. Use variables, length, width and area to find the solution. A car travels in a speed of 60km/hr. How far will it travel for 3 hours. Evaluate; 5 + 3 * 2 (8 + 2) * (5 - 3) 9 + (6 - 2) * 3 8 * 3 - 2^2 (10 + 5) * (2^2) / 4 You have g liters of juice. You want to pour the juice equally into the h bottles. How much juice will each bottle contain? g=12, h=13. 9.You have b rupees and spend 8 rupees on a book. How much money do you have left? Evaluate m=5 * (4 + 6) - 10 and print out m to the console. "],["data-types-and-data-structures.html", "Chapter 2 Data Types and Data Structures 2.1 Data types 2.2 Data Structures 2.3 CODE CHALLENGE", " Chapter 2 Data Types and Data Structures 2.1 Data types There are different kinds of values in R that can be manipulated in variables in R. class()function is used to check the data type of a value or a variable. Different data types include; Numeric These represent numeric values such as integers and decimals. They are used for mathematical expressions and quantitative data analysis. The below code finds the data type of variable a which is assigned 23.5 and returns numeric. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJhPTIzLjVcbmNsYXNzKGEpICNjaGVjayB0aGUgZGF0YSB0eXBlIG9mIGEgIn0= a whole number without without a decimal is also numeric for instance 45, 8, 0 and 73. Run the code chunks below to inspect to find the code of each value eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJjbGFzcyg0NSkifQ== eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJjbGFzcyg4KSJ9 eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJjbGFzcygwKSJ9 eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJjbGFzcyg3MykifQ== Activity In the code cell below; Find the data type of 98.03 using class() function. Assign the value 98.03 to variable height and find its data type. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIEkuIEZpbmQgdGhlIGRhdGEgdHlwZSBvZiA5OC4wMyB1c2luZyBjbGFzcygpIGZ1bmN0aW9uXG4jIENPREUgSEVSRSBcblxuXG4jIElJLiBBc3NpZ24gdGhlIHZhbHVlIGA5OC4wM2AgdG8gdmFyaWFibGUgYGhlaWdodGAgYW5kIGZpbmQgaXRzIGRhdGEgdHlwZVxuIyBDT0RFIEhFUkUifQ== Integers They represent whole numbers without any any decimals and are a subclass of numeric. L is added at the end of a whole number to indicate that it is an integer. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJhPTIzTCAjYWRkIEwgdG8gc2hvdyBpdCBpcyBhbiBpbnRlZ2VyXG5jbGFzcyhhKSJ9 Lets store age as an integer. Note the ‘L’ after the number 27 eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJhZ2UgPSAyN0xcbmNsYXNzKGFnZSkifQ== Activity In the code cell below; Find the data type of any whole number using class() function. Remember to add L after the digits There are 27 goats in a field, assign the quantity of goats to a variable goats and find the data type of the variable goats. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIEkuIEZpbmQgdGhlIGRhdGEgdHlwZSBvZiBhbnkgd2hvbGUgbnVtYmVyIHVzaW5nIGBjbGFzcygpYCBmdW5jdGlvbi4gKipSZW1lbWJlciB0byBhZGQgYExgIGFmdGVyIHRoZSBkaWdpdHMqKlxuIyBDT0RFIEhFUkUgXG5cblxuIyBJSS4gVGhlcmUgYXJlIDI3IGdvYXRzIGluIGEgZmllbGQsIGFzc2lnbiB0aGUgcXVhbnRpdHkgb2YgZ29hdHMgdG8gYSB2YXJpYWJsZSBgZ29hdHNgIGFuZCBmaW5kIHRoZSBkYXRhIHR5cGUgb2YgdGhlIHZhcmlhYmxlIGBnb2F0c2AuIFxuIyBDT0RFIEhFUkUifQ== Characters They represent text strings such as names, sentences and labels. They are enclosed in ” or ’. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJhPVwiRE5BXCJcbmNsYXNzKGEpIn0= Lets use name as a character eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJuYW1lID0gXCJQcmFneWFcIlxuY2xhc3MobmFtZSkifQ== for an object eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJpdGVtID0gXCJjYXJcIiAjIFwiY2FyXCIgaXMgc3RvcmVkIGluIGEgdmFyaWFibGUgaXRlbVxuY2xhc3MoaXRlbSkifQ== Character data types can have empty spaces in between, for instance; eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJmdWxsbmFtZSA9IFwiU2FsbWFuIEtoYW5cIlxuY2xhc3MoZnVsbG5hbWUpIn0= Activity In the code cell below; Find the data type of the value \"school\" using the class() function. Assign your first name to a variable firstname and find its data type. Remember to enclose it in quotation marks Assign your full names to a variable full_name and find its data type. For instance if your name is “Vipin Patel” assign it like;full_name = \"Vipin Patel\" and find its data type. Remember to enclose the value in quotation marks since its a character data type eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIEkuIEZpbmQgdGhlIGRhdGEgdHlwZSBvZiB0aGUgdmFsdWUgYFwic2Nob29sXCJcbiMgQ09ERSBIRVJFXG5cbiMgQXNzaWduIHlvdXIgZmlyc3QgbmFtZSB0byB2YXJpYWJsZSBmaXJzdCBuYW1lIGFuZCBmaW5kIGl0cyBkYXRhIHR5cGVcbiMgQ09ERSBIRVJFIFxuXG4jIEFzc2lnbiB5b3VyIGZ1bGwgbmFtZXMgdG8gYSB2YXJpYWJsZSBmdWxsX25hbWVcbiMgQ09ERSBIRVJFICJ9 Logical They represent boolean values which has only distinct value; TRUE or FALSE. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJhPVRSVUUgI2xvZ2ljYWwgZGF0YSB0eXBlcyBpcyBlaXRoZXIgVFJVRSBvciBGQUxTRSBvbmx5XG5jbGFzcyhhKSJ9 changing it to FALSE eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJiID0gRkFMU0VcbmNsYXNzKGIpIn0= Activity Assign a TRUE to a variable grateful and find the data type of the variable. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIEFzc2lnbiBhIGBUUlVFYCB0byBhIHZhcmlhYmxlIGBncmF0ZWZ1bGAgYW5kIGZpbmQgaXRzIGRhdGEgdHlwZVxuIyMgQ09ERSBIRVJFICJ9 Complex They represent complex numbers with real and imaginary parts eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJhPTIrM2kgIyBDb21wbGV4IGRhdGEgdHlwZXMgaGF2ZSAnaScgYXQgdGhlIGVuZCBvZiBlYWNoIG51bWJlclxuY2xhc3MoYSkifQ== 2 is the real part while 3i is the imaginary part. Also, complex numbers can be created by complex() function with real and imaginary as the arguments. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJ6ID0gY29tcGxleChyZWFsID0gMywgaW1hZ2luYXJ5ID0gNylcbnByaW50KHopICNzaG93IHRoZSBjb21sZXggdmFsdWVcbmNsYXNzKHopICNjb25maXJtIHRoYXQgaXQgaXMgYSBjb21wbGV4IG51bWJlciAifQ== Lets try another values to fit to the complex data type 2+5i eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJ6ID0gY29tcGxleChyZWFsPTIsIGltYWdpbmFyeSA9IDUpXG5wcmludCh6KVxuY2xhc3MoeikifQ== 7 + 6i eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJtPWNvbXBsZXgocmVhbD03LCBpbWFnaW5hcnkgPSA2KVxucHJpbnQobSlcbmNsYXNzKG0pIn0= 4i - 1 eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJiID0gNGktMVxucHJpbnQoYilcbmNsYXNzKGIpIn0= Complex data types can include the imaginary part only without real number, R will assume the real part to be 0(zero). For instance; eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJoID0gM2lcbnByaW50KGgpXG5jbGFzcyhoKSJ9 Activity Find the data type of the following values; One of them is a numeric element 31 + 8 5 - i 4i 12 eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjaS4gMzEgKyA4XG4jIENPREUgSEVSRVxuXG4jIGlpLiA1IC0gaVxuIyBDT0RFIEhFUkUgXG5cbiMgaWlpLiA0aVxuIyBDT0RFIEhFUkUgXG5cbiMgaXYuIDEyXG4jIENPREUgSEVSRSJ9 Raw They represent a vector of bytes in their natural form. They are used in storing binary data. Example; eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJhPWNoYXJUb1JhdyhcIkROQVwiKVxucHJpbnQoYSlcbmNsYXNzKGEpXG5cbiMgY29udmVydCBiYWNrIHRvIGNoYXJhY3RlciBcbmI9cmF3VG9DaGFyKGEpXG5jbGFzcyhiKSJ9 “Hello world” can be represented as in the results below when converted to raw data type eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJiaW5hcnlfZGF0YSA9IGNoYXJUb1JhdyhcIkhlbGxvIFdvcmxkXCIpXG5wcmludChiaW5hcnlfZGF0YSkgXG5jbGFzcyhiaW5hcnlfZGF0YSkifQ== Numeric can also be represented as raw vectors; eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJhZ2U9YXMucmF3KDI3KVxucHJpbnQoYWdlKVxuY2xhc3MoYWdlKSJ9 Activity Convert the following values to raw data types; Hint: use charToRaw() function for character data types and as.raw() to other data types. \"Vipin\" 27 69.0 FALSE 12L eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIGkuIFwiVmlwaW5cIlxuIyBDT0RFIEhFUkVcblxuIyBpaS4gMjdcbiMgQ09ERSBIRVJFXG5cblxuIyBpaWkuIDY5LjBcbiMgQ09ERSBIRVJFXG5cbiMgaXYuIEZBTFNFXG4jIENPREUgSEVSRVxuXG4jIHYuIDEyTFxuIyBDT0RFIEhFUkUifQ== 2.2 Data Structures This is the organization of data into one or multiple data values in specific structures. Different types of data structures in R include; Vector Matrix Data frame 2.2.1 Vector A vector is a single entity consisting of a collection of things. They are versatile providing a basis of many operations in statistics and data manipulation hence it is important to have knowledge of vectors for effective programming in R. Vectors are created using a c() function, here is an example of a vector. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJtYXJrcyA9IGMoMjMsIDY3LCA5OCwgMzQsIDk4LCAyMSlcbnByaW50KG1hcmtzKSAjIHByaW50IHRvIHRoZSBjb25zb2xlIn0= Activity Create a vector named ages and insert the following values 21, 32, 22, 24, 27, 54, 20, 13 and print it out on the console eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIHZlY3RvciBhZ2VzIHdpdGggZWxlbWVudHMgMjEsIDMyLCAyMiwgMjQsIDI3LCA1NCwgMjAsIDEzXG4jIENPREUgSEVSRSAifQ== The class function is utilized to determine the data types present within vector data values. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJjbGFzcyhtYXJrcykifQ== The vector “marks” consist of only numeric values is.vector function is used to check if the variable is a vector. It will return a Boolean value, TRUE if the variable in question is truly a vector while FALSE if otherwise. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJpcy52ZWN0b3IobWFya3MpIn0= unlike matrix and data frame, vector has no dimension eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJkaW0obWFya3MpIn0= length() function is used to count number of elements in vectors. In our case vector marks, marks = c(23, 67, 98, 34, 98, 21) has six elements, therefore, length() command will return 6. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJsZW5ndGgobWFya3MpIn0= Activity Create a vector named height with its elements/values as 120.1, 118, 123.4, 130.8, 115.2 and the following; print it out to the console using print() function. find the data type of its elements using class() function use is.vector() function to find if its really a vector count the number of elements in the vector using length() function. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIHByaW50IGl0IG91dFxuIyBDT0RFIEhFUkUgXG5cbiMgZmluZCB0aGUgZGF0YSB0eXBlIG9mIGl0cyBlbGVtZW50c1xuIyBDT0RFIEhFUkVcblxuIyBmaW5kIGlmIGl0cyByZWFsbHkgYSB2ZWN0b3JcbiMgQ09ERSBIRVJFXG5cbiMgY291bnQgdGhlIG51bWJlciBvZiBlbGVtZW50cyBpbiB0aGUgdmVjdG9yXG4jIENPREUgSEVSRSAifQ== Index is the position of an element in a vector, in R it starts at index 1 - lets say we find the third element by index 3 eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJtYXJrc1szXSJ9 value “98” is at index 3, or the third in the vector. The first value/element of a vector is indexed 1, for instance if we find the first value in the vector marks. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJtYXJrc1sxXSAjcmV0dXJucyB0aGUgZmlyc3QgdmFsdWUifQ== The sequence goes on, the second, third, fourth, fifth … values are indexed as , 2, 3, 4, 5… respectively. i.e the n^th value is indexed as n. Vectors can also be sliced to obtain values over a range of indices. For instance the code below shows how to retrieve the from the second to the fourth values as a vector eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJwcmludChtYXJrc1syOjRdKVxuaXMudmVjdG9yKG1hcmtzWzI6NF0pICMgY29uZmlybSBpZiB0aGUgcmV0cmlldmVkIHZhbHVlcyBhcmUgaW4gYSB2ZWN0b3IifQ== An element at a specific index in a vector can be excluded by adding a - sign before the index value. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJtYXJrc1stMl0gI2V4Y2x1ZGUgdGhlIGVsZW1lbnQgYXQgaW5kZXggMiJ9 rev() command is used to reverse the order of elements in a vector eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJyZXYobWFya3MpIn0= 2.2.1.1 Mathematical Operations in a vector The summary/descriptive statistics are calculated by summary() command. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzdW1tYXJ5KG1hcmtzKSJ9 sum(), median(), and mean() are used to calculate the total, median, average and the standard deviation of the values in a vector eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJwcmludChcIk1BUktTXCIpXG5wcmludChwYXN0ZShcIlRPVEFMOiBcIiwgc3VtKG1hcmtzKSkpXG5wcmludChwYXN0ZShcIk1FRElBTjogXCIsIG1lZGlhbihtYXJrcykpKVxucHJpbnQocGFzdGUoXCJBVkVSQUdFOiBcIiwgbWVhbihtYXJrcykpKSJ9 Vector multiplication and division - vectors can be multiplied or divided by a scalar value of another vector of the same length and numeric data type. For instance, the vector marks=c(23, 67, 98, 34, 98, 21) is being multiplied by a scalar value 2, that will multiply each element in a vector by two. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJkb3VibGVfbWFya3MgPTIgKiBtYXJrcyBcbm1hcmtzXG5kb3VibGVfbWFya3MifQ== The values in the vector marks can also be scaled down to a half when multiplied by a scalar value 0.5. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJoYWxmX21hcmtzID0wLjUgKiBtYXJrcyBcbm1hcmtzXG5oYWxmX21hcmtzIn0= Alternatively, instead of multiplying the vector by 0.5, it can be divided by 2 a scalar value two. This is what is referred to as vector division. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJoYWxmX21hcmtzID0gbWFya3MvMlxuaGFsZl9tYXJrcyJ9 Two or more vectors of numeric values of the equal length can be multiplied or divided by each other. The example below demonstrates vector by vector multiplication. Each value is multiplied by a value of a corresponding index in the next vector such that; 3 is multiplied by 7 to be 21 5 is multiplied by 3 to be 15 1 is multiplied by 9 to be 9. The resultant vector is now 21 15 9. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJhID0gYygzLCA1LCAxKVxuYiA9IGMoNywgMywgOSlcbmFiID0gYSpiXG5hYlxuYmEgPSBiKmEgIyBpcyB0aGUgc2FtZSBhcyBhYlxuYmEifQ== The same vectors can also be divided by each other provided they are of the same length and all have numeric values. The order of vector division, for instance in the first case vector a is divided by vector b such that; 3 is divided by 7 to be 0.4285714 5 is divided by 3 to be 1.6666667 1 is divided by 9 to be 0.1111111. The resultant vector is now 0.4285714 1.6666667 0.1111111. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIEZpcnN0IGNhc2VcbmEgPSBjKDMsIDUsIDEpXG5iID0gYyg3LCAzLCA5KVxuXG4jIERpdmlkZSB2ZWN0b3IgYSBieSBiXG5hYmRpdj1hL2JcbmFiZGl2In0= , and in the second case the order of vector division is reversed by vector b being divided by a such that; 7 is divided by 3 to be 2.333333 3 is divided by 5 to be 0.600000 9 is divided by 1 to be 9.000000. The resultant vector is now 2.333333 0.600000 9.000000. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIFNlY29uZCBjYXNlXG5hID0gYygzLCA1LCAxKVxuYiA9IGMoNywgMywgOSlcbiMgRGl2aWRlIHZlY3RvciBiIGJ5IGFcbmJhZGl2PWIvYVxuYmFkaXYifQ== However, when multiplying vectors of unequal length the shorter one is replicated to match the longer vector. It will then return a warning. The case below shows how vector e=c(1,2,3,4,5) and f=c(1,2) are multiplied. vector f=c(1,2) will be replicated to match the length of vector e, therefore, vector f will be f=c(1,2,1,2,1). The process of vector by vector multiplication will be followed. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJlPWMoMSwyLDMsNCw1KVxuZj1jKDEsMilcbmVmID0gZSpmICNpdCBzaG93cyBhbiBlcnJvclxuZWYgI3Nob3dzIHJlc3VsdHMgc2luY2UgZiBpcyByZXBsaWNhdGVkIHRvIG1hdGNoIGUgYXMgZj1jKDEsMiwxLDIsMSkifQ== Multiple vectors can be concatenated/combined to come up with one giant vector eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJhXG5iXG56PWMoYSxiLGEpICNjb25jYXRlbmF0ZXMgdGhlIHZlY3RvcnMgXG56In0= 2.2.1.2 Character Vectors Vectors can also contain character data types for instance eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJteV9uYW1lID0gYyhcIk15XCIsIFwibmFtZVwiLCBcImlzXCIsIFwiVmlwaW5cIilcbm15X25hbWVbNV0gPSBcIlNpbmdoXCIgI2luc2VydCBhdCB0aGUgZW5kIFxubXlfbmFtZSJ9 Combining the vectors to a single string. For instance the vector my_name = c(\"My\", \"name\", \"is\", \"Vipin\") is combined to \"My name is Vipin\". The collapse argument is used as below; eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJwcmludChwYXN0ZShteV9uYW1lLCBjb2xsYXBzZT1cIiBcIikpIn0= Calculate the summary/descriptive statistics of the vector by function summary(). It finds; Count/length Class (data type) Mode eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzdW1tYXJ5KG15X25hbWUpIn0= 2.2.1.3 Vectors with mixed data types A vector can also consist of characters values and numeric values for instance eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJudW1iZXJzPWMoMSxcInR3b1wiLCAzLCBcInRocmVlXCIpXG5udW1iZXJzIn0= however the numeric elements in the vector are recognized by R as character data type. They can be converted to numeric by; eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJhcy5udW1lcmljKG51bWJlcnNbMV0pICsgMiJ9 the integers can be converted by; eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJhcy5pbnRlZ2VyKG51bWJlcnNbMV0pIn0= 2.2.1.4 Named Vectors Variable names can be assigned to vectors like; eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJuYW1lZF92ZWN0b3I9YyhFY29SMT1cIkdBQVRUQ1wiLCBIaW5kSUlJPVwiQUFHQ1RUXCIsIFBzdDE9XCJDVEdDQUdcIilcbm5hbWVkX3ZlY3RvciJ9 to access the names of the values is; eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJuYW1lcyhuYW1lZF92ZWN0b3IpIn0= A vector element can be accessed using its name eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJuYW1lZF92ZWN0b3JbXCJFY29SMVwiXSAjIGZpbmQgdGhlIHZhbHVlIG9mIGEgdmVjdG9yIGJ5IGl0cyBuYW1lICJ9 2.2.1.5 Generating number series as vectors The seq function in R is used to generate sequences of numbers. It takes several arguments, including from, to, by, and length.out, among others, to specify the range and increment of the sequence. Here’s a brief overview of its usage: from: The starting value of the sequence. to: The end value of the sequence. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIEdlbmVyYXRlIGEgc2VxdWVuY2UgZnJvbSAxIHRvIDEwXG5zZXJpZXMgPSBzZXEoZnJvbT0xLCB0bz0yMClcbnNlcmllcyBcblxuIyBJdCBjYW4gYWxzbyBiZSB3cml0dGVuIGFzXG5zZXJpZXMgPSBzZXEoMSwyMClcbnNlcmllcyJ9 eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJjbGFzcyhzZXJpZXMpIn0= by: The increment between consecutive values in the sequence. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIGdlbmVyYXRlIG51bWJlcnMgMCB0byAxMCBpbmNyZW1lbnRlZCBieSAwLjVcbnNlcmllczM9c2VxKDAsIDEwLCBieT0wLjUpXG5zZXJpZXMzIn0= length: The desired length of the sequence. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIGdlbmVyYXRlIDEwIG51bWJlcnMgZnJvbSAwIHRvIDZcbnNlcmllczQ9c2VxKDAsIDYsIGxlbmd0aD0xMClcbnNlcmllczRcbnNlcSgwLCA2KSJ9 along.with: An optional vector argument specifying the length and names of the output sequence. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIEdlbmVyYXRlIGEgc2VxdWVuY2UgYWxvbmcgd2l0aCBhIHZlY3Rvclxuc2VxKGFsb25nLndpdGggPSBjKFwiYVwiLCBcImJcIiwgXCJjXCIpKSJ9 2.2.1.6 Null data points in vectors NA data (Not available or blank) for instance eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJtYXJrcz1jKDc4LDY1LCA5OCwgODcsIDg5LCBOQSlcbnN1bShpcy5uYShtYXJrcykpICNDb3VudCB0aGUgbnVsbCB2YWx1ZXMgaW4gYSB2ZWN0b3IgIn0= Other inbuilt functions for mathematical operations cannot be done if Null values exists in a vector unless they are removed/ignored eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjc3VtKG1hcmtzKSAjcmV0dXJucyBhbiBlcnJvclxuc3VtKG1hcmtzLCBuYS5ybSA9IFRSVUUpICNyZW1vdmUgbnVsbCB2YWx1ZXMgYmVmb3JlIGNhbGN1bGF0aW5nIHRoZSBzdW1cbm1lZGlhbihtYXJrcywgbmEucm0gPSBUUlVFKVxuc3VtbWFyeShtYXJrcywgbmEucm0gPSBUUlVFKSJ9 2.2.2 Matrix A matrix is a two dimensional data type that contain a single class of data. The code below shows one can produce a matrix from a vector eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJ2ZWN0b3IxID0gc2VxKDEsIDkpIFxuXG4jIENvbnZlcnQgdG8gbWF0cml4XG4jIyBjcmVhdGUgYnkgY29sdW1uIFxuZGF0YTE9bWF0cml4KHZlY3RvcjEsIG5jb2w9MylcbmRhdGExIn0= A vector of values 1 to 9 is being converted to a matrix where the values are being arranged column wise by default. A matrix has a multiple dimensions, the most common type of matrix is two dimesnional. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJkaW0oZGF0YTEpIn0= is.matrix() function is used to confirm if a given variable is a matrix and it return a boolean value. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJpcy5tYXRyaXgoZGF0YTEpIn0= A matrix can also be created row-wise from a vector. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIyBjcmVhdGUgYnkgcm93IFxuZGF0YTI9bWF0cml4KHZlY3RvcjEsIG5jb2w9MywgYnlyb3c9VFJVRSlcbmRhdGEyICMgaXMgYSB0cmFuc3Bvc2Ugb2YgZGF0YTEifQ== Matrix is recognized either as a matrix or array by R eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJjbGFzcyhkYXRhMSkgIn0= To access a specific data point in a matrix, the matrix is indexed by row then column for instance matrix_data[row_index, column_index] eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJkYXRhMVszLCAyXSJ9 To access a single row, in this case we find the second row which will be returned as a vector eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJkYXRhMVxucm93MiA9IGRhdGExWzIsXSAjIGFjY2VzcyByb3cgMiBcbmlzLnZlY3Rvcihyb3cyKSAjY2FuIGJlIGFjY2Vzc2VkIGJ5IHJvdyAyIn0= To access a single column eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJkYXRhMVxuY29sMz1kYXRhMVssM10gIyBhY2Nlc3MgY29sdW1uIDNcbmlzLnZlY3Rvcihjb2wzKSAjY2FuIGJlIGFjY2Vzc2VkIGJ5IGNvbHVtbiAzIn0= Count the number of rows in a matrix eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJucm93KGRhdGExKSJ9 data1 has 3 rows Count the number of columns in a matrix eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJuY29sKGRhdGExKSJ9 2.2.2.1 Mathematical Operations in a matrix Matrix Addition Matrix addition can be done by adding a number to the matrix or another matrix of the equal number of rows and columns. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJkYXRhMVxuZGF0YTIgPSBkYXRhMSArIDNcbmRhdGEyIn0= For instance, the code snippet above demonstrates matrix addition by a numeric value. Adding value 3 to a matrix adds each value in the matrix by 3. To demonstrate a matrix to a matrix addition, we will create two matrices of the equal dimensions then add to each other. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJkYXRhMSA9IG1hdHJpeChzZXEoMSwgOSksIG5jb2w9MywgYnlyb3c9VFJVRSlcbnByaW50KGRhdGExKVxuZGF0YTIgPSBtYXRyaXgoc2VxKDEsIDE4LCAyKSwgbmNvbD0zLCBieXJvdz1UUlVFKVxucHJpbnQoZGF0YTIpXG5cbiMgQWRkIGRhdGExIHRvIGRhdGEyXG5yZXN1bHRhbnRfbWF0cml4ID0gZGF0YTEgKyBkYXRhMlxucmVzdWx0YW50X21hdHJpeCJ9 Matrix Subtraction The same concept of matrix addition applies to matrix subtraction as well. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJkYXRhMyA9IGRhdGExLTEgI3JlZHVjZSBlYWNoIHZhbHVlIGJ5IDFcbmRhdGEzIn0= Subtracting 1 to data1 subtract each value in the matrix by 1. Lets now subtract data1 from data2. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJkYXRhMVxuZGF0YTJcbnJlc3VsdGFudF9tYXRyaXggPSBkYXRhMi1kYXRhMVxucmVzdWx0YW50X21hdHJpeCJ9 Matrix Multiplication(scalar) A matrix can be multiplied by a scalar whereby the scalar value multiplies all the cells in the matrix. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJkYXRhNCA9IGRhdGExKjVcbmRhdGE0In0= Matrix multiplication applies a concept of row by column. The row of the first matrix is multiplied with a row of the second matrix. It also known as the dot product. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJkYXRhMVxuZGF0YTJcbnByb2R1Y3RfbWF0cml4ID0gZGF0YTEgKiBkYXRhMlxucHJvZHVjdF9tYXRyaXgifQ== Matrix division eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJkYXRhNSA9IGRhdGExLzJcbmRhdGE1In0= 2.2.3 Data frame is a two dimensional data structure, like a 2d array/matrix with rows and columns. Lets convert a matrix into a data frame eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJ2ZWN0b3IxID0gYygxOjEyKVxubWF0cml4MSA9IG1hdHJpeCh2ZWN0b3IxLCBuY29sPTQpICNjcmVhdGUgYSBtYXRyaXggZnJvbSB0aGUgdmVjdG9yIFxuXG4jIEFkZGluZyBhIGNvbHVtbiBzdHVkZW50IFxuU3R1ZGVudHM9YyhcIlByYWd5YVwiLCBcIkRlZXBpa2FcIiwgXCJDaGFuZHJhblwiKVxuZGF0YSA9IGRhdGEuZnJhbWUoU3R1ZGVudHMsIG1hdHJpeDEpIFxuZGF0YSJ9 The above data shows scores of different students in different subjects. The column names are automatically generated by R, however, the column names can be added as below. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJoZWFkZXJzPWMoXCJTdHVkZW50c1wiLCBcIkdlb25vbWljc1wiLCBcIlByb3Rlb21pY3NcIiwgXCJNaWNyb2Jpb2xvZ3lcIiwgXCJCaW9zdGF0aXN0aWNzXCIpXG5jb2xuYW1lcyhkYXRhKT1oZWFkZXJzICNhZGQgY29sdW1uIG5hbWVzIFxuZGF0YSJ9 A row wise addition can be performed on a data frame to find the total scores for each student in the four units eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIyBBZGQgYSBuZXcgY29sdW1uIHdpdGggdG90YWwgbWFya3Mgb2J0YWluZWQgXG5kYXRhJHRvdGFsX21hcmtzPXJvd1N1bXMoZGF0YVssIGMoMiwgMywgNCwgNSldKSAjYWRkIGZyb20gc2Vjb25kIHRvIGZpZnRoIGNvbHVtbiBcbmRhdGEifQ== Find the average score for each student.rowMeans() is used the average of each row/record. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJkYXRhJGF2ZXJhZ2VfbWFya3M9cm93TWVhbnMoZGF0YVssIGMoMiwgMywgNCwgNSldKVxuZGF0YSJ9 2.3 CODE CHALLENGE Solve the questions in R markdown; Create a the following variables as instructed below; a variable length to store 61.2. a variable age to store 76. a variable is_old to store TRUE. a variable name to store \"Pradip\". a variable comp_var to store 2 + 3i. Use class() function to find the data type of the variables created above. Create another variable width to store 12.1 and perform the following operations; Add variable length to width`. Subtract width from length. Multiply length and width. Store the solution in a variable area. Convert each of the created variable in “a” above to raw data type. Create a vector, my_vector with the following values; 12, 54, 76, 71, 42, 75, 33 and perform the following operations; Find the: dimension of my_vector using dim() function. data type of its element using the class() function. Use the is.vector() function to find its a vector. This part will require you to access and manipulate the vector elements of my_vector. Get the fourth value of my_vector. and print to the console. Subset the vector from the second to the fifth element and print it to the console. Exclude the fourth element and print the resultant vector to the console. Reverse the order elements in my_vector. Create two vectors; vector1 and vector2that have the elements 12, 76, 45, 23, 64, 88 and 22, 87, 10, 5, 99, 54 respectively.Use the two vectors to answer the following questions. Use summarise() function to find the descriptive statistics ofvector1. Add 7 to vector1 and name it vector3. c, Subtract 3 from vector2 and name it vector4. Add vector1 to vector2 Find the division of the vector1 and vector2. "],["loops.html", "Chapter 3 Loops 3.1 For loops 3.2 While loop 3.3 CODE CHALLENGE", " Chapter 3 Loops A loop is a sequence of instructions that are executed iterative until a condition is met. They are two types of loops in R, they are; - for loops - while loops 3.1 For loops This is a type of a loop that iterate over a sequence of elements, such as a vector, list, or sequence of numbers, executing a block of code for each element in the sequence. The loop iterates over each element of the sequence, one at a time, and executes the specified code block for each iteration. Here is the syntax of a for loop; for (variable in sequence) { # Code block to be executed for each iteration } When a condition is met the execution/iteration stops. The curly brackets {, } in the for-loop enclosed the code block to be be executed alliteratively to meet the said condition. Below is an example of R loop over a range of numbers 1 to 10 eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJmb3IgKG4gaW4gMToxMClcbntcbiAgcHJpbnQobio1KVxufSJ9 Lets break down the above code; for (n in 1:10) This line initializes a for loop that iterates over the numbers from 1 to 10. The 1:10 sequence generates the numbers 1, 2, 3, …, 10. The variable n takes on each value in this sequence in turn, starting from 1 and ending at 10 {...} This is the loop body that contains the statement/code that will be executed alliteratively until n is 10. print(n*5) Inside the loop body, the print() function is used to output the result of the expression n*5 to the console. n*5 multiplies the current value of n by 5 In summary, the for loop above iterates through the numbers 1 to 10 and prints the respective product with 5 to the console. Activity Using a for-loop, print each number from 10 to 20 alliteratively eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIGxvb3AgZnJvbSAxMCB0byAyMFxuIyBDT0RFIEhFUkUgIn0= Loops in vectors Not only can for loops go through a set of numeric values but also they can loop through a vector of characters. For instance; eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIFRoaXMgd2lsbCBsb29wIHRocm91Z2ggYSBzZXQgb2YgZnJ1aXRzXG5mcnVpdHMgPC0gYyhcImFwcGxlc1wiLCBcImJhbmFuYXNcIiwgXCJvcmFuZ2VzXCIpXG5mb3IgKGZydWl0IGluIGZydWl0cykge1xuICBwcmludChwYXN0ZShcIkkgbGlrZVwiLCBmcnVpdCkpXG59In0= Lets break down the code below; fruits &lt;- c(\"apples\", \"bananas\", \"oranges\") This is vector of fruits that will be efficiently iterated in the for loop. for (fruit in fruits) This line initializes a loop that iterates through the vector fruits. {...} the loop body. It contains code statement that will be executed. print(paste(\"I like\", fruit)) Each fruit in the vector is printed out im the console along with the statement “I like”. Activity Create a vector variable cars and store the following values; \"Mazda\", \"Toyota\", \"Ford\", \"Ferrari\", \"Isuzu\". Iterate through cars and print out “I bought a ____”. For the blank input a car model. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIENPREUgSEVSRSAifQ== Nested loops A for loop can run within another for loop, this is referred to as a “Nested for loop”. The code below shows how nested for loops work eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJmb3IgKGkgaW4gMTozKSB7XG4gIGZvciAoaiBpbiAxOjIpIHtcbiAgICBwcmludChwYXN0ZShcImk6XCIsIGksIFwiLCBqOlwiLCBqKSlcbiAgfVxufSJ9 The code for (j in 1:2) { ...} is nested within for (i in 1:3) {...} and the former is executed in each iteration of the later. These nested for loops are very useful when working with multidimensional data structures like matrices. Like matrix by matrix multiplication; Example 1 eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIE1hdHJpeCBtdWx0aXBsaWNhdGlvblxubWF0cml4MSA8LSBtYXRyaXgoMTo0LCBucm93ID0gMilcbm1hdHJpeDFcbm1hdHJpeDIgPC0gbWF0cml4KDU6OCwgbnJvdyA9IDIpXG5tYXRyaXgyXG5cbiMgTWF0cmljZXMgYXJlIG11bHRpcGxpZWQgcm93KG9mIG1hdHJpeDEpIGJ5IGNvbHVtbihvZiBtYXRyaXgyKVxucmVzdWx0IDwtIG1hdHJpeCgwLCBucm93ID0gbnJvdyhtYXRyaXgxKSwgbmNvbCA9IG5jb2wobWF0cml4MikpXG5mb3IgKGkgaW4gMTpucm93KG1hdHJpeDEpKSB7XG4gIGZvciAoaiBpbiAxOm5jb2wobWF0cml4MikpIHtcbiAgICBmb3IgKGsgaW4gMTpuY29sKG1hdHJpeDEpKSB7XG4gICAgICByZXN1bHRbaSwgal0gPC0gcmVzdWx0W2ksIGpdICsgbWF0cml4MVtpLCBrXSAqIG1hdHJpeDJbaywgal1cbiAgICB9XG4gIH1cbn1cbnByaW50KHJlc3VsdCkifQ== Example 2 eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIERlZmluZSB0d28gbWF0cmljZXNcbm1hdHJpeDEgPC0gbWF0cml4KDE6OSwgbnJvdyA9IDMpXG5tYXRyaXgxXG5tYXRyaXgyIDwtIG1hdHJpeCg5OjEsIG5yb3cgPSAzKVxubWF0cml4MlxuXG4jIEluaXRpYWxpemUgcmVzdWx0IG1hdHJpeFxucmVzdWx0IDwtIG1hdHJpeCgwLCBucm93ID0gbnJvdyhtYXRyaXgxKSwgbmNvbCA9IG5jb2wobWF0cml4MikpXG5cbiMgUGVyZm9ybSBtYXRyaXggbXVsdGlwbGljYXRpb24gdXNpbmcgbmVzdGVkIGZvciBsb29wc1xuZm9yIChpIGluIDE6bnJvdyhtYXRyaXgxKSkge1xuICBmb3IgKGogaW4gMTpuY29sKG1hdHJpeDIpKSB7XG4gICAgZm9yIChrIGluIDE6bmNvbChtYXRyaXgxKSkge1xuICAgICAgcmVzdWx0W2ksIGpdIDwtIHJlc3VsdFtpLCBqXSArIG1hdHJpeDFbaSwga10gKiBtYXRyaXgyW2ssIGpdXG4gICAgfVxuICB9XG59XG5cbnJlc3VsdCJ9 The loop can also iterate over a vector and perform the preset condition. For instance in the code below, the loops through a vector and prints a square of each element in the vector. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJudW09YygxLDIsMyw4LDEwKVxuZm9yIChuIGluIDE6bGVuZ3RoKG51bSkpXG57XG4gIHByaW50KG51bVtuXV4yKVxufSJ9 Activity Create a sequence of numbers from 1 to 3 and store it in a variable x. Create a sequence of numbers from 1 to 5 and store it in a variable y. Write a nested loop: The outer loop should iterate through each value in x. The inner loop should iterate through each value in y. Inside the inner loop, print the current values of x and y in the format: \"x = &lt;value&gt;, y = &lt;value&gt;\". eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIENPREUgSEVSRSJ9 Breaking of a loop A program stops once something happens for instance the below program executes by looping through a vector num and breaks when n is greater than 7. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJudW09YygxLDIsMyw4LDEwKVxuXG4jU3RvcCB0aGUgbG9vcCBpZiB0aGUgbiBpcyBncmVhdGVyIHRoYW4gN1xuZm9yIChuIGluIG51bSlcbntcbiAgaWYgKG4gPiA3KXtcbiAgICBicmVha1xuICB9XG4gIFxuICBwcmludChuKVxuXG59In0= Activity Create a vector fruits which have the elements; mango, avocado, pineapple, peach, banana and orange. Loop through the fruits , print each element Break the loop once you print ‘banana’. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIENPREUgSEVSRSJ9 3.2 While loop A while loop is a control flow statement in programming that repeatedly executes a block of code as long as a specified condition is true. After executing the code block, the program returns at the beginning the condition, if its is TRUE the code block is executed again. The loop continues to execute until the condition becomes false. while (condition) { # Code block to be executed } Example 1 The below program executes as long as n is less than or equal to m. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJtPTRcbm49LTlcbndoaWxlKG48PW0pXG57XG4gIHByaW50KG4pXG4gIG49bisxXG59In0= The condition of the above code is that the program will executes as long as n is less than or equal to m. The value of n is incremented by 1 and printed out until as long its less than or equal to m. Example 2 eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJpID0gMTBcbndoaWxlIChpID49IDUpIHtcbiAgcHJpbnQoaSlcbiAgaSA9IGkgLSAxXG59In0= This while loop prints the values of i from 10 to 5. It starts with `i equal to 10 and continues iterating as long as i is more than or equal to 5. Inside the loop, each value of i is printed, and i is reduced by 1 in each iteration. Activity Learn how to use a while loop to repeatedly perform an operation as long as a condition is true; Create a variable b and assign it the value 5. Use a while loop to repeatedly add 1 to b and print the result. The loop should continue as long as b is less than or equal to 15. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIENPREUgSEVSRSJ9 Infinite Loop: If the condition in a while loop always evaluates to TRUE, the loop becomes an infinite loop, which continuously executes the code block without stopping. Infinite loops should be avoided, as they can cause the program to hang or become unresponsive. There are different use cases in R while loops. These are a few examples of use cases; Calculating factorial eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIEZ1bmN0aW9uIHRvIGNhbGN1bGF0ZSBmYWN0b3JpYWxcbmZhY3RvcmlhbCA9IGZ1bmN0aW9uKG4pIHtcbiAgcmVzdWx0ID0gMVxuICBpID0gMVxuICB3aGlsZSAoaSA8PSBuKSB7XG4gICAgcmVzdWx0ID0gcmVzdWx0ICogaVxuICAgIGkgPSBpICsgMVxuICB9XG4gIHJldHVybihyZXN1bHQpXG59XG5cbiMgQ2FsY3VsYXRlIGZhY3RvcmlhbCBvZiA1XG5mYWN0b3JpYWxfNSA9IGZhY3RvcmlhbCg1KVxucHJpbnQoZmFjdG9yaWFsXzUpICAjIE91dHB1dDogMTIwIn0= Use input validation eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIFByb21wdCB1c2VyIHRvIGVudGVyIGEgbnVtYmVyIHVudGlsIGEgdmFsaWQgbnVtZXJpYyB2YWx1ZSBpcyBwcm92aWRlZFxubnVtID0gTkFcbndoaWxlIChpcy5uYShudW0pKSB7XG4gIGlucHV0ID0gM1xuICBudW0gPSBhcy5udW1lcmljKGlucHV0KVxuICBpZiAoaXMubmEobnVtKSkge1xuICAgIGNhdChcIkludmFsaWQgaW5wdXQuIFBsZWFzZSBlbnRlciBhIG51bWVyaWMgdmFsdWUuXFxuXCIpXG4gIH1cbn1cbnByaW50KHBhc3RlKFwiWW91IGVudGVyZWQ6XCIsIG51bSkpIn0= Generating a fibonacci series eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIEdlbmVyYXRlIEZpYm9uYWNjaSBzZXJpZXMgdXAgdG8gbiB0ZXJtc1xuZmlib25hY2NpID0gZnVuY3Rpb24obikge1xuICBhID0gMFxuICBiID0gMVxuICBpID0gMVxuICB3aGlsZSAoaSA8PSBuKSB7XG4gICAgY2F0KGEsIFwiIFwiKVxuICAgIG5leHRfdGVybSA9IGEgKyBiXG4gICAgYSA9IGJcbiAgICBiID0gbmV4dF90ZXJtXG4gICAgaSA9IGkgKyAxXG4gIH1cbiAgY2F0KFwiXFxuXCIpXG59XG5cbiMgR2VuZXJhdGUgRmlib25hY2NpIHNlcmllcyB3aXRoIDEwIHRlcm1zXG5maWJvbmFjY2koMTApICAjIE91dHB1dDogMCAgMSAgMSAgMiAgMyAgNSAgOCAgMTMgIDIxICAzNCJ9 3.3 CODE CHALLENGE Solve the following equations using for and while loops; A vector v contains 34, 86, 23, 65, 98. Use a for loop to print each v element. Create a matrix with the first column containing numbers from 1 to 3 and b containing 4 to 6. Use a for loop to print each row of the data frame. Vector x has elements, 1, 2, 3 while vector y consist of elements, 3, 0, -3. Use nested for loops to print all combinations of the elements in x and y. Create a sequence, m, from 1 to 10. Use a for loop to print each element, but break the loop if the element is equal to 5. A variable b initially has a value of 1. Double the value of b and print it out to the console. The printing should stop once b is greater than or equal to 30. Use a while loop for this. A vector names contains elements, Vipin, Patel, Pradip, Salman, Tom. Iterate through the vector and print \"Hello\" alongside each name to print greet the participant. Hint: Use a for loop Create a matrix m filled with values from 1 to 12 that has 4 rows and 3 columns. Use a for loop to iterate through each row and find its sum. A variable n has a value 3. Add 3 to n alliteratively and print out the result as long as n is equal to or less than 25. Use a while loop to solve this problem. A vector v contains values from 1 to 7. Using a for loop, iterate through each element the use a while loop to subtract each element until it reaches 0. Print out the final result after the loops. Hint: Nest a `while loop in a for loop. Create a vector, animals containing \"cat\", \"lion\", \"dog\", \"sheep\". Use a for loop to print out each element alongside the number of characters the element contains. "],["working-with-files.html", "Chapter 4 Working with files 4.1 .XLSX, XLS files 4.2 .CSV files 4.3 CODE CHALLENGE", " Chapter 4 Working with files 4.1 .XLSX, XLS files 4.1.1 Reading a file to a dataframe This chapter explains how to read a file to a data frame using the readxl library. The readxl package can be installed from the console by install.packages(\"readxl\") command. Lets begin by importing the library eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIEltcG9ydCB0aGUgbGlicmFyeVxubGlicmFyeShyZWFkeGwpIn0= The readxl library can read .xlsx, xls files to a data frame. For this case, Human genome excel file is read. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIEltcG9ydCB0aGUgbGlicmFyeVxubGlicmFyeShyZWFkeGwpXG5cbiMgUmVhZCB0aGUgZXhjZWwgZmlsZVxuaGcgPSByZWFkX2V4Y2VsKFwiZGF0YS9IdW1hbl9nZW5vbWUueGxzeFwiKSJ9 View the data set eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIEltcG9ydCB0aGUgbGlicmFyeVxubGlicmFyeShyZWFkeGwpXG5cbiMgUmVhZCB0aGUgZXhjZWwgZmlsZVxuaGcgPSByZWFkX2V4Y2VsKFwiZGF0YS9IdW1hbl9nZW5vbWUueGxzeFwiKVxuXG4jIFZpZXcgdGhlIGRhdGFzZXRcbnN0cihoZykifQ== In R, head() and tail() are functions used to view the first few rows or the last few rows of a data frame respectively. These functions are particularly useful for quickly inspecting the structure and content of a dataset. Here’s how you can use them for this case; eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIEltcG9ydCB0aGUgbGlicmFyeVxubGlicmFyeShyZWFkeGwpXG5cbiMgUmVhZCB0aGUgZXhjZWwgZmlsZVxuaGcgPSByZWFkX2V4Y2VsKFwiZGF0YS9IdW1hbl9nZW5vbWUueGxzeFwiKVxuXG4jIERpc3BsYXkgdGhlIGZpcnN0IDYgcmVjb3JkcyBvZiB0aGUgZGF0YSBzZXRcbmhlYWQoaGcpIn0= The head() function displays the first few rows of a data frame or a vector. By default, it shows the first 6 rows, but you can specify the number of rows to display using the n argument. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIEltcG9ydCB0aGUgbGlicmFyeVxubGlicmFyeShyZWFkeGwpXG5cbiMgUmVhZCB0aGUgZXhjZWwgZmlsZVxuaGcgPSByZWFkX2V4Y2VsKFwiZGF0YS9IdW1hbl9nZW5vbWUueGxzeFwiKVxuXG4jIFNwZWNpZnkgdGhlIG51bWJlciBvZiB0aGUgZmlyc3Qgcm93cyB5b3Ugd2FudCB0byB2aWV3XG5oZWFkKGhnLCBuPTEwKSJ9 The tail argument can be used as; eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIEltcG9ydCB0aGUgbGlicmFyeVxubGlicmFyeShyZWFkeGwpXG5cbiMgUmVhZCB0aGUgZXhjZWwgZmlsZVxuaGcgPSByZWFkX2V4Y2VsKFwiZGF0YS9IdW1hbl9nZW5vbWUueGxzeFwiKVxuXG4jIFZpZXcgdGhlIGxhc3QgNiByb3dzIG9mIHRoZSBkYXRhc2V0LiBcbnRhaWwoaGcpIn0= to show the last 6 records while specifying n value will show the specified number of rows. R identifies this type of data as table or data frame. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJjbGFzcyhoZykifQ== str() is used to find the nature of data such as column data types, number of rows and columns, column names , and first records in the dataframe eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzdHIoaGcpIn0= is.na() is used to check if there is null/blank values in the dataset. If there is it returns TRUE in place of the null point while it return FALSE in place of the value. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzdW0oaXMubmEoaGcpKSJ9 The “hg” data frame has no null values. Lets dive into biology to solve some of the questions about genetics Q1. Calculate the gene densityfor each chromosome The gene density is calculated in terms of genes per megabase eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJiYXNlX01iID0gaGckQmFzZV9QYWlycy8xMDAwMDAwXG5iYXNlX01iIn0= To make the values more clear, the results can be rounded off to two decimal place. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJyYmFzZV9NYj1yb3VuZChiYXNlX01iLCBkaWdpdHMgPSAyKVxucmJhc2VfTWIifQ== Q2. Calculate number of genes per megabase per chromosomes The protein coding genes are divided to the gene density. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJnZW5lc19wZXJfbWVnYWJhc2UgPSByb3VuZChoZyRQcm90ZWluX0NvZGluZ19nZW5lcy9iYXNlX01iLCBkaWdpdHMgPSAyKVxuZ2VuZXNfcGVyX21lZ2FiYXNlIn0= Lets create a new column to the dataframe to the dataset eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJoZ1tcImdlbmVzX3Blcl9NYlwiXT1nZW5lc19wZXJfbWVnYWJhc2VcbnN0cihoZykifQ== 4.1.2 Write a new table to a file locally The write.table() function is used to write table to file on a local machine. The file is saved by deault to the working directory unless the path is specified. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJ3cml0ZS50YWJsZShoZywgXG4gICAgICAgICAgICBmaWxlPVwiZGF0YS9oZ19tb2RpZmllZFwiLCBcbiAgICAgICAgICAgIHF1b3RlPUZBTFNFLCBcbiAgICAgICAgICAgIHNlcD0nXFx0JywgXG4gICAgICAgICAgICByb3cubmFtZXM9RkFMU0UsIFxuICAgICAgICAgICAgY29sLm5hbWVzPVRSVUUpIn0= This file will be saved by default on the working directory unless the file path is changed. Checking if the new file is saved. file.show(&quot;data/hg_modified&quot;) 4.2 .CSV files CSV stands for “Comma Separated Values”. This is a plain text file that contains data in a tabular format for example the data below that represents athletes’ statistics. Name, Age, Weight Salman, 30, 75 Pragya, 35, 72 Vidyat, 25, 68 Each line in a CSV file represents a row while each field in a row is separated by a comma “,”. These files are often used in data manipulations since they are lightweight, simple and widely supported. In this course we shall briefly go through two csv files and do brief analyses. 4.2.1 Titanic dataset The titanic data is a famous data set in data analysis. It contains information about passengers that boarded the ship Titan(not actual true) including their age, ticket class, fare and others. 4.2.1.1 Reading the csv file The read.csv() function is used to read a csv file to a data frame. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIFJlYWQgZGF0YSBmcm9tIGEgQ1NWIGZpbGUgaW50byBhIGRhdGEgZnJhbWVcbnRpdGFuaWNfZGYgPSByZWFkLmNzdihcImRhdGEvdGl0YW5pY19kYXRhc2V0LmNzdlwiKSJ9 4.2.1.2 Data Assessment Structure of the data set eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzdHIodGl0YW5pY19kZikifQ== Show the first 6 records of the data set. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJoZWFkKHRpdGFuaWNfZGYpIn0= Count the null values in the data eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzdW0oaXMubmEodGl0YW5pY19kZikpIn0= The are 87 fields in the data that are null(empty) Calculate the descriptive statistics eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzdW1tYXJ5KHRpdGFuaWNfZGYpIn0= 4.2.1.3 Data Analysis The answers to the two questions will give a brief understanding of titanic passengers. What is the survival rate by gender? eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIFN1cnZpdmFsIHJhdGUgYnkgZ2VuZGVyXG50YWJsZSh0aXRhbmljX2RmJFNleCwgdGl0YW5pY19kZiRTdXJ2aXZlZCkifQ== From the table above, all males drowned but all females survived. What is the survival rate by ticket class? eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIFN1cnZpdmFsIHJhdGUgYnkgdGlja2V0IGNsYXNzXG50YWJsZSh0aXRhbmljX2RmJFBjbGFzcywgdGl0YW5pY19kZiRTdXJ2aXZlZCkifQ== Most passengers from ticket class 0 survived. Activity 4.2.2 IBM Employee Attrition data This is a common data set used for HR analytics. It contains information about all IBM employees, who are still in the company and the ones who left. Analyzing this attrition data set will provide meaningful insights on employees’ behavior and their engagement. HR can also find employee retention techniques with organizations. In this course section, we will briefly go through basic analysis after assessing the data. 4.2.2.1 Reading the csv file eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJhdHRyaXRpb25fZGYgPSByZWFkLmNzdihcImRhdGEvSFItRW1wbG95ZWUtQXR0cml0aW9uLmNzdlwiKSJ9 4.2.2.2 Data Assessment Structure of the data eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzdHIoYXR0cml0aW9uX2RmKSJ9 Most columns have character and integer values. Shape of the data set eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJkaW0oYXR0cml0aW9uX2RmKSJ9 There are 1470 rows and 35 variables in the data set. Lets now show the first few rows of the data to get the idea of how the data looks like. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJoZWFkKGF0dHJpdGlvbl9kZikifQ== It is also important when analyzing data to find the existence of null fields and duplicated records. Are there any null values? eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzdW0oaXMubmEoYXR0cml0aW9uX2RmKSkifQ== The data is complete with no null values. Are there any duplicated rows? eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzdW0oZHVwbGljYXRlZChhdHRyaXRpb25fZGYpKSJ9 Also, all the rows are unique and there is no duplicated row in the data. 4.2.2.3 Data Analysis The following questions will enable us to get a brief overview of the company; What are the unique departments in the company? eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJ1bmlxdWUoYXR0cml0aW9uX2RmJERlcGFydG1lbnQpIn0= There are three distinct departments in the company data; Human Resources, Sales, and Research &amp; Development. Is there a difference in attrition rates between genders? eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIFRhYmxlIG9mIGF0dHJpdGlvbiBieSBnZW5kZXJcbnRhYmxlKGF0dHJpdGlvbl9kZiRHZW5kZXIsIGF0dHJpdGlvbl9kZiRBdHRyaXRpb24pIn0= From the table, we can see the number of males and females who have left the company (Attrition=Yes) and those who are still employed (Attrition=No) What is the attrition rate among employees in different job roles? eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIFRhYmxlIG9mIGF0dHJpdGlvbiBieSBqb2Igcm9sZVxudGFibGUoYXR0cml0aW9uX2RmJEpvYlJvbGUsIGF0dHJpdGlvbl9kZiRBdHRyaXRpb24pIn0= From the table above there is a high attrition rate among Laboratory technicians(62) and Sales Executives(57) while lowest attrition rate among Research directors(2) and Managers(5). Does age impact attrition rate? To find a clear answer to this, the ages will be summarized into different groups and create a table comparing the attrition and retention rates among different age groups. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIFRhYmxlIG9mIGF0dHJpdGlvbiBieSBhZ2UgZ3JvdXBcbmF0dHJpdGlvbl9kZiRBZ2VHcm91cCA8LSBjdXQoYXR0cml0aW9uX2RmJEFnZSwgYnJlYWtzID0gYygwLCAzMCwgNDAsIDUwLCA2MCwgNzApLCBsYWJlbHMgPSBjKFwiMC0zMFwiLCBcIjMxLTQwXCIsIFwiNDEtNTBcIiwgXCI1MS02MFwiLCBcIjYxLTcwXCIpKVxuXG4jIENyZWF0ZSBhIHRhYmxlXG50YWJsZShhdHRyaXRpb25fZGYkQWdlR3JvdXAsIGF0dHJpdGlvbl9kZiRBdHRyaXRpb24pIn0= Young employees below 30 years tend to leave the company than elder employees of above 40 years who are mostly retained by the company. 4.3 CODE CHALLENGE excel data - https://www.kaggle.com/datasets/suruchiarora/yahoo-finance-dataset-2018-2023 csv data - https://www.kaggle.com/datasets/prasad22/vehicle-population-statistics In this question you will be required to download kaggle data set, the Yahoo data 2018-2023 from here. Follow the instructions below to work on the data set. Install and load the readxl library. Read the excel file to a data frame using readxl() function. Store the data frame in a variable, yahoo_data. Use str() command to get a glimpse of the dataset. Show the first 4 records and the last 10 records of the yahoo_data using the head() and tail() command respectively. Calculate the total null values in the yahoo_data using the sum() along with is.na() functions. Find the total duplicated observations in the yahoo_data with sum() and duplicated() commands. In this second part of the challenge, you will be required to download a kaggle data set - the vehicle population statistics csv file from here. You will use the data set to answer the following questions. Read the data set to a data frame using the read.csv inbuilt function. Store the data frame in a variable vehicle_data. Display the first 6 rows and the last 3 rows using the head() and tail() function. Show the first 10 observations in the \"Scooters\" column. What are the number of Jeeps per Region. Use table functions. Hint:Refer from “What is the survival rate by gender?” in the content above What are the distinct categories in the vehicle_data. "],["dpyr-library.html", "Chapter 5 Dpyr library 5.1 Dplyr Verbs 5.2 Chaining 5.3 Application of Dplyr on Microbiology 5.4 CODE CHALLENGE", " Chapter 5 Dpyr library readxl library has been used to read excel table into R and manipulate the data using R basic functions, now dplyr library will be used. This, dplyr library is an advanced package that has functions used to manipulate data. The functions are referred to as dplyr verbs. This are some of the examples of dplyr verbs; select filter arrange mutate group by summarise To install dplyr, run the below command on the console. install.packages(&quot;dplyr&quot;) Ensure your computer is connected to the internet when installing! To invoke the libraries to the program run; eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJsaWJyYXJ5KGRwbHlyKVxubGlicmFyeShyZWFkeGwpIn0= Before working on the data, it need to imported first. The readxl library will be used. The data will then be manipulated by dplyr. Apart from data retrieved from excel tables, there are some inbuilt freely available datasets in R that a student can use for practice. data() function can be used to view some of the freely available datasets in R. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJkYXRhKCkifQ== This will show all data sets including both the inbuilt and the previously imported ones. Alternatively the code below will show only the inbuilt R data sets. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJscyhcInBhY2thZ2U6ZGF0YXNldHNcIikifQ== Some libraries come with their own inbuilt data sets which can be explored by the command; eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJkYXRhKHBhY2thZ2U9LnBhY2thZ2VzKGFsbC5hdmFpbGFibGUgPSBUUlVFKSkifQ== Good example is the famous iris that will be used in this course. It is always used by beginners in data science. The data set contains measurements of various characteristics of iris flowers. These characteristics include sepal length, sepal width, petal length, and petal width. There are three species of iris flowers in the data set: setosa, versicolor, and virginica. The data will be invoked to R before assessment and wrangling; Lets load the iris data and explore the first few records. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJkYXRhKFwiaXJpc1wiKVxuaGVhZChpcmlzKSJ9 Calculating the summary statistics eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzdW1tYXJ5KGlyaXMpIn0= Lets write this data set locally to a file. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJ3cml0ZS50YWJsZShpcmlzLCBcImRhdGEvaXJpc19kYXRhc2V0LnR4dFwiLCBhcHBlbmQgPSBGQUxTRSlcbmZpbGUuc2hvdyhcImRhdGEvaXJpc19kYXRhc2V0LnR4dFwiKSJ9 or to remove quotes next to values eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJ3cml0ZS50YWJsZShpcmlzLCBcImRhdGEvaXJpc19kYXRhc2V0LnR4dFwiLCBhcHBlbmQgPSBGQUxTRSwgcXVvdGUgPSBGQUxTRSlcbmZpbGUuc2hvdyhcImRhdGEvaXJpc19kYXRhc2V0LnR4dFwiKSJ9 or to remove quotes and row names eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJ3cml0ZS50YWJsZShpcmlzLCBcImRhdGEvaXJpc19kYXRhc2V0LnR4dFwiLCBhcHBlbmQgPSBGQUxTRSwgcXVvdGU9RkFMU0UsIHJvdy5uYW1lcyA9IEZBTFNFKVxuZmlsZS5zaG93KFwiZGF0YS9pcmlzX2RhdGFzZXQudHh0XCIpIn0= 5.1 Dplyr Verbs 5.1.1 select This dplyr verb is used when selecting or dropping specific columns. In this lesson we will find the iris column names and select two of them using select. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIEZpbmQgdGhlIGNvbHVtbiBuYW1lcyBcbmNvbG5hbWVzKGlyaXMpIn0= Remember the data frame to work on need to be specified in the arguments such that selected_data = select(data_frame, col1, col2, col3) Therefore, we will select the columns; Species, Petal length and petal width. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzZWxlY3RlZF9pcmlzX2RhdGEgPSBzZWxlY3QoaXJpcyxcbiAgICAgICAgICAgICAgICAgICAgICAgUGV0YWwuTGVuZ3RoLCBQZXRhbC5XaWR0aCwgU3BlY2llcylcblxuIyB2aWV3IHRoZSBmaXJzdCBmZXcgcm93cyBvZiB0aGUgc2VsZWN0ZWQgZGF0YVxuaGVhZChzZWxlY3RlZF9pcmlzX2RhdGEpIn0= The three selected columns are displayed in the data frame above. Specific columns can be dropped by putting - before the column name as # Drop specified columns remaining_data = select(data_frame, -col1_to_drop, -col2_to_drop) In this lesson, we will drop petal length, petal width and Species columns; eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJyZW1haW5pbmdfaXJpc19kYXRhID0gc2VsZWN0KGlyaXMsXG4gICAgICAgICAgICAgICAgICAgICAgIC1QZXRhbC5MZW5ndGgsIC1QZXRhbC5XaWR0aCwgLVNwZWNpZXMpXG5cbiMgdmlldyB0aGUgZmlyc3QgZmV3IHJvd3Mgb2YgdGhlIHNlbGVjdGVkIGRhdGFcbmhlYWQocmVtYWluaW5nX2lyaXNfZGF0YSkifQ== 5.1.2 filter Is a verb/function from dplyr used to filter records in a data frame based on a specific condition. It allows the analyst to retrieve the records he/she is interested in and work easier with the subset. With filter(), the data frame and the condion are passed as a arguments; # Filtering rows where a certain column meets a condition filtered_data = filter(data_frame, column_name &gt; 5 # This is the condition) Lets select the species ‘setosa’ from the iris data set eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzZXRvc2FfaXJpcyA9IGZpbHRlcihpcmlzLCAjIHRoZSBkYXRhIGZyYW1lXG4gICAgICAgICAgICAgICAgICAgICBTcGVjaWVzID09IFwic2V0b3NhXCIgIyB0aGUgY29uZGl0aW9uXG4gICAgICAgICAgICAgICAgICAgICApXG4jIEZpcnN0IGZldyByZWNvcmRzIG9mIHNldG9zYSBkYXRhXG5oZWFkKHNldG9zYV9pcmlzKSJ9 Records with sepal width of more than 3.0 can be filtered. Here is how we achieve such a subset eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJ3aWRlX3NlcGFsX2lyaXMgPSBmaWx0ZXIoaXJpcywgI3RoZSBkYXRhIGZyYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgU2VwYWwuV2lkdGg+My4wICMgdGhlIGNvbmRpdGlvblxuICAgICAgICAgICAgICAgICAgICAgICAgIClcblxuaGVhZCh3aWRlX3NlcGFsX2lyaXMpIn0= 5.1.3 arrange This is dplyr verb/function used for sorting rows by rearranging in a specific order. here is how to use arrange() function; arranged_data = arrange(data_frame, column_name) This allows the analyst to arrange the data in a default ascending order. To arrange in a descending order a desc() function is added as; # Note the additional desc function arranged_data = arrange(data_frame, desc(column_name)) Now lets order the iris data in an ascending order based on Petal length and view the first 6 records with the shortest petal. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIFNvcnQgdGhlIGRhdGEgXG5ieV9wZXRhbF9sZW5ndGggPSBhcnJhbmdlKGlyaXMsICMgZGF0YSBmcmFtZSBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgUGV0YWwuTGVuZ3RoICMgb3JkZXIgYnkgY29sdW1uXG4gICAgICAgICAgICAgICAgICAgICAgICAgIClcblxuIyBWaWV3IHRoZSBkYXRhIFxuaGVhZChieV9wZXRhbF9sZW5ndGgpIn0= Lets repeat the same process but now we order the data in a descending order. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIFNvcnQgdGhlIGRhdGEgXG5ieV9wZXRhbF9sZW5ndGggPSBhcnJhbmdlKGlyaXMsICMgZGF0YSBmcmFtZSBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzYyhQZXRhbC5MZW5ndGgpICMgb3JkZXIgYnkgY29sdW1uXG4gICAgICAgICAgICAgICAgICAgICAgICAgIClcblxuIyBWaWV3IHRoZSBkYXRhIFxuaGVhZChieV9wZXRhbF9sZW5ndGgpIn0= 5.1.4 mutate mutate() is a dplyr verb used to modifying the existing variables or creating new variables in a data set. In this case we can calculate the log off Sepal length in the iris data eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIG1vZGlmeSBTZXBhbC5MZW5ndGhcbm5ld19pcmlzID0gbXV0YXRlKGlyaXMsIFNlcGFsLkxlbmd0aD1sb2coU2VwYWwuTGVuZ3RoKSlcblxuaGVhZChuZXdfaXJpcykifQ== Additionally, we can create an entirely new variable by mutate(). In this case we will find the ratio between petal length and petal width. The new variable will be called “Petal.Length.Width.Ratio” eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJuZXdfaXJpcyA9IG11dGF0ZShpcmlzLFxuICAgICAgICAgICAgICAgICAgUGV0YWwuTGVuZ3RoLldpZHRoLlJhdGlvID0gUGV0YWwuTGVuZ3RoL1BldGFsLldpZHRoKVxuXG5oZWFkKG5ld19pcmlzKSJ9 The “Petal.Length.Width.Ratio” is found by dividing the Petal.Length and the Petal.Width variables. 5.1.5 group_by The group_by() is a function used to group records in a data frame by one or more variables. It allows the analyst to create a group based on a certain criteria. Lets group the iris data based on the Species variable; eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJpcmlzX2dyb3VwcyA9IGdyb3VwX2J5KGlyaXMsIFNwZWNpZXMpXG5oZWFkKGlyaXNfZ3JvdXBzKSJ9 This groupings allow the analyst to retrieve insights at more base level and uncover more insights that could not have been possible when analyzing the entire data set 5.1.6 Summarise To calculate summary statistics such as average, median and maximum the summarise() is used. This function collapses mutilple rows into a summary row. For instance calculating the mean Petal width; eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzdW1tYXJpc2UoaXJpcywgXG4gICAgICAgICAgbWVhbl9wZXRhbF93aWR0aD1tZWFuKFBldGFsLldpZHRoKSkifQ== To find the mean petal width for each iris species; - the iris data will be grouped by species - a mean value for each group will be calculated eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJncm91cGVkX2lyaXMgPSBncm91cF9ieShpcmlzLCBTcGVjaWVzKVxubWVhbl9wZXRhbF93aWR0aHMgPSBzdW1tYXJpc2UoZ3JvdXBlZF9pcmlzLCBtZWFuX3ZhbHVlPW1lYW4oUGV0YWwuV2lkdGgpKVxubWVhbl9wZXRhbF93aWR0aHMifQ== 5.2 Chaining Chaining is the process of combining several operations together using the %&gt;% or forward pipe operator. The chained workflow succeeds each other until the whole process is done. To understand chaining, the mtcars(Motor Trend cars) data set will be used. Mtcars is also a well-known data set containing several attributes of 32 different cars from 1974. Here’s a brief explanation of the variables in the mtcars data set: mpg: Miles per gallon (fuel efficiency). cyl: Number of cylinders. disp: Displacement (cubic inches). hp: Horsepower. drat: Rear axle ratio. wt: Weight (in 1000 lbs). qsec: Quarter mile time (in seconds). vs: Engine type (0 = V-shaped, 1 = Straight). am: Transmission type (0 = Automatic, 1 = Manual). gear: Number of forward gears. carb: Number of carburetors. Lets start by loading the data into the program and view its first few records; eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJkYXRhKG10Y2FycylcbmhlYWQobXRjYXJzKSJ9 Lets select 6 most important columns in this analysis eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJjYXJzMSA9IG10Y2FycyAlPiUgc2VsZWN0KG1wZywgY3lsLCBkaXNwLCBocCwgcXNlYywgYW0pXG5cbmhlYWQoY2FyczEpIn0= Lets now filter to find vehicles with an automatic transmission type. The filter verb will be chained to select verb with %&gt;%. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJjYXJzMiA9IG10Y2FycyAlPiVzZWxlY3QobXBnLCBjeWwsIGRpc3AsIGhwLCBxc2VjLCBhbSkgJT4lXG4gIGZpbHRlcihhbT09MClcbmhlYWQoY2FyczIpIn0= All these vehicles are of automatic transmission type, lets rank them according to the horsepower in descending order. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJjYXJzMz0gbXRjYXJzICU+JXNlbGVjdChtcGcsIGN5bCwgZGlzcCwgaHAsIHFzZWMsIGFtLCB3dCkgJT4lXG4gIGZpbHRlcihhbT09MCkgJT4lXG4gIGFycmFuZ2UoZGVzYyhocCkpXG5cbmhlYWQoY2FyczMpIn0= A new column of weight in 1000kgs (wt_1000kgs) can be created by diving weight in 1000lbs by 2.20462. mutate verb will be chained also. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJjYXJzND0gbXRjYXJzICU+JXNlbGVjdChtcGcsIGN5bCwgZGlzcCwgaHAsIHFzZWMsIGFtLCB3dCkgJT4lXG4gIGZpbHRlcihhbT09MCkgJT4lXG4gIGFycmFuZ2UoZGVzYyhocCkpICU+JVxuICBtdXRhdGUod3RfMTAwMGtncz13dC8yLjIwNDYyKVxuXG5oZWFkKGNhcnM0KSJ9 The above process has explained how chained works in dplyr. Many functions/processed can be chained together to manipulate data to the desired output. The next section will apply chaining to biology and be used to answer a few questions that will cement your understanding in R as a biologist. 5.3 Application of Dplyr on Microbiology Genetics composition of an organism can be analyzed using dplyr, in this course unit it will be used to analyze the human genetics data. Read the data set from a file into a data frame eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJoZyA9IHJlYWRfZXhjZWwoXCJkYXRhL0h1bWFuX2dlbm9tZS54bHN4XCIpXG5jbGFzcyhoZykifQ== review the first six records of the data set eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJoZWFkKGhnKSJ9 the last six records of the data set eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJ0YWlsKGhnKSJ9 sample_n() command is used to randomly sample fixed number of rows from the data frame. Lets sample five rows randomly eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJoZyAlPiUgc2FtcGxlX24oNSkifQ== sample_fra() command can also be used to extract a percent of rows randomly. Lets samople 25% of the rows eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJoZyAlPiUgc2FtcGxlX2ZyYWMoMC4yNSwgcmVwbGFjZSA9IEZBTFNFKSJ9 The replace argument allows repetition of rows when sampling when set TRUE and vice versa. The essence of dplyr in microbiology data can be explained better by questions. Q1. Which chromosomes has maximum size The functions used here are; select, arrange, slice The required columns will be selected i.e Chromosomes and Base_Pairs(size) The data will ordered according to Base_Pairs in descending order by the arrange command. the data will be “sliced” to select the first row All these processes will be chained to run progressively from process 1 to 3. All the above steps should be piped eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJoZzEgPSBoZyAlPiUgI3RyYW5zZmVyIHRoZSBkYXRhIHRvIGEgbmV3IHZhcmlhYmxlXG4gIHNlbGVjdChDaHJvbW9zb21lLCBCYXNlX1BhaXJzKSAlPiUgIyBzZWxlY3QgdGhlIHJlcXVpcmVkIGNvbHVtbnMgXG4gICAgICAgICAgIGFycmFuZ2UoZGVzYyhCYXNlX1BhaXJzKSkgJT4lICNvcmRlciBpbiBkZXNjZW5kaW5nIG9yZGVyXG4gICAgICAgICAgIHNsaWNlKDEpXG5cbmhnMSJ9 Q2. List of Chromosomes with more than 500 pseudogenes and more than 1000 protein coding genes The human genome data frame will be filtered to find the Chromosomes with more than 500 pseudogenes and more than 1000 protein coding genes. &amp; condition is used in the filter eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJoZzI9aGclPiVcbiAgZmlsdGVyKFBzZXVkb2dlbmVzPjUwMCAmIFByb3RlaW5fQ29kaW5nX2dlbmVzPjEwMDApXG5oZzIifQ== Q3. List of Chromosomes with more tha 500 pseudogenes or more than 1000 protein coding genes and miRNA more than 100 a frame will be filtered to find the Chromosomes with more than 500 pseudogenes The human genome dator more than 1000 protein coding genes and mtRNA more than 100. The &amp; and | conditions will be used in place of “and” and “or” respectively. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJoZzI9aGcgJT4lIFxuICBmaWx0ZXIoKFBzZXVkb2dlbmVzPjUwMHxQcm90ZWluX0NvZGluZ19nZW5lcz4xMDAwKSAmIG1pUk5BPjEwMClcbmhnMiJ9 Q4. Which 10 Chromosomes have the highest protein gene density (Genes per megabase) Mutate -&gt; is a command to create a new column Lets create a column of genes per megabase where a megabase is 1000000 base pairs eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJoZzM9aGcgJT4lXG4gIG11dGF0ZShHZW5lc19wZXJfTWI9cm91bmQoKFByb3RlaW5fQ29kaW5nX2dlbmVzLyhCYXNlX1BhaXJzLzEwMDAwMCkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpZ2l0PTIpKVxuaGczIn0= then order the data according to genes per megabse column (Genes_per_mb) in descending order and select the first 10 rows using arrange and select commands. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJoZzQ9aGczICU+JVxuICBhcnJhbmdlKGRlc2MoR2VuZXNfcGVyX01iKSkgJT4lICMgb3JkZXIgaW4gZGVzY2VuZGluZyBvcmRlciBcbiAgc2VsZWN0KENocm9tb3NvbWUsIEdlbmVzX3Blcl9NYikgJT4lICMgc2VsZWN0IHRoZSByZXF1aXJlZCBjb2x1bW5zIFxuICBzbGljZSgxOjEwKSAjIHNlbGVjdCB0aGUgdG9wIDEwXG5cbmhnNCJ9 Q5. Calculate the mean of gene density for autosomes, sex chromosomes and mitochondrial genes eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJhdXRvc29tZXM9cmVwKFwiQVwiLCAyMikgI2NyZWF0ZSBhIHZlY3RvciB3aXRoIDIyIEFzXG5wcmludChhdXRvc29tZXMpXG5jaHJfY2xhc3M9YyhhdXRvc29tZXMsIFwiU1wiLCBcIlNcIiwgXCJNXCIpXG5jaHJfY2xhc3NcbmhnNT0gaGczICU+JVxuICBtdXRhdGUoVHlwZT1jaHJfY2xhc3MpXG5cbmhnNSAjIGNvbmZpcm0gdGhlIG5ldyBjb2x1bW4gXCJUeXBlXCIgaXMgYWRkZWQifQ== Group by chromosomes and calculate the mean density eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJoZzY9aGc1ICU+JSBcbiAgZ3JvdXBfYnkoVHlwZSkgJT4lXG4gIHN1bW1hcmlzZShnZW5lX2RlbnNpdHk9bWVhbihHZW5lc19wZXJfTWIpKVxuaGc2In0= 5.4 CODE CHALLENGE ToothGrowth is one of the freely available data sets in base R. Go on and; Load the ToothGrowth data set. Display the first 5 records. Use the function write.table to write the data set to a local file. You will use the Palmer Archipelago(Antarctica) Penguin data set from kaggle to practice various data manipulation techniques using dplyr verbs in R. Ensure You load the data and necessary packages before working on the following questions below; Using select() verb, create a new data set that contains only the columns species, island, bill_length_mm. Filter the Penguin data set to retain only the “Adelie” species that live in “Torgersen” island. Use filter() function. Arrange the Penguin data set according to bill_lenghth_mm in descending order. Use arrange() verb. Using the mutate() function, add a new column called bill_length_cm derived from bill_length_mm by 10. Group the data set according to island. For each species and island, calculate the mean bill_length_mm and the observations count. In this activity, you will chain at least four dplyr verbs to achieve the desired outcome. Select the columns, island, body_mass_g, species, bill_length_mm Filter the selected data set to include penguins that have a bill length greater than 40mm Create a new column/variable that will convert bill_length_mm to bill_length_cm i.e divide bill_length_mm by 10 to come up with bill_length_cm. Order the resulting data set by body_mass_g in descending order. "],["ggplot.html", "Chapter 6 GGPLOT 6.1 Five key steps to ggplot 6.2 Prepare the data for plotting - Data Assessment 6.3 Plotting 6.4 Working with inbuilt iris data 6.5 CODE CHALLENGE", " Chapter 6 GGPLOT ggplot2 is a powerful data visualization package in R that allows you to create a wide variety of graphs and plots. It is based on the grammar of graphics, a structured approach to constructing plots that emphasizes the mapping of data to visual attributes. 6.1 Five key steps to ggplot There are 5 key steps in plotting in ggplot; 1.The Setup - Read the data set, define x and y axis The Labels - Title, X and Y axis labels The Theme - Default, Black and White, colored etc. The Facets - Individual Graphs for each group in data with exactly same range The Layers or geoms - The actual plot type - e.g Bar plot, Box plot, Violin plot etc. To install ggplot, run the below command in the console. install.packages(&quot;ggplot2&quot;) 6.2 Prepare the data for plotting - Data Assessment Invoke the libraries eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJsaWJyYXJ5KGdncGxvdDIpXG5saWJyYXJ5KGRhdGEudGFibGUpIn0= Read the data using the fread function eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJtZXRoeWxhdGVkX2MgPSBmcmVhZChcImRhdGEvUl9XT1JLU0hPUC5jc3ZcIiwgaGVhZGVyPVQsIHNlcD1cIixcIikifQ== View the first five records of the data eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJoZWFkKG1ldGh5bGF0ZWRfYykifQ== Look at the nature of the data eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzdHIobWV0aHlsYXRlZF9jKSJ9 In the data set, there are numeric variables a well as character columns. There are 15 records in the data set Calculate the summary statistics eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzdW1tYXJ5KG1ldGh5bGF0ZWRfYykifQ== Do the data have null values? eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzdW0oaXMubmEobWV0aHlsYXRlZF9jKSkifQ== This data does not have any null values. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJjbGFzcyhtZXRoeWxhdGVkX2MpIn0= 6.3 Plotting 6.3.1 Base set up Before plotting the data, you need to; Define the graph skeleton. This is just an empty ggplot() function without additional arguments Define the aesthetics. It defines how data should be mapped to visual properties like position, color, shape, and size Define the labels. The labels make the visualizations informative and easy to understand for the user. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJncmFwaD1nZ3Bsb3QobWV0aHlsYXRlZF9jLCBcbiAgICAgICAgICAgICBhZXMoeD1DaHJvbW9zb21lLCB5PUNvdW50X2luX21pbGxpb25zKSkrICNncmFwaCBhZXN0aGV0aWNzXG4gIGxhYnMoeD1cIkNocm9tb3NvbWVzXCIsIHk9XCJDeXRvc2luZSBjb3VudCBpbiBtaWxsaW9uc1wiLCB0aXRsZT1cIkMgZGlzdHJpYnV0aW9uIGluIEEgdGhhbGlhbmFcIikgI2dyYXBoIGxhYmVsc1xuXG5wcmludChncmFwaCkifQ== Define the type of graph - geoms. For this case, the graph is a bar graph. geoms() stands for ‘geometric objects’. In ggplot, there are different types of geoms to define which graph is to be plotted. Some of the examples include; geom_point() for scatter plot geom_line() for a line chart geom_density() for a density plots geom_histogram() for histograms geom_boxplot() for box plots geom_col() for bar chart geom_tile() for heat maps In this course we shall explore a few of them but the concepts applies to all of them. Now lets make our plot a bar chart. geom() function will be added to a variable graph defined above to plot a bar chart. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJncmFwaDEgPSBncmFwaCArIGdlb21fY29sKCkgI3Bsb3QgYSBiYXIgY2hhcnRcbnByaW50KGdyYXBoMSkifQ== If you can remember our data, methylated_c has a column/variable “Context”. In this step, the variable “Context” will be introduced to make a stacked bar chart, therefore, the C distribution in Chromosomes based on “Context” will be plotted to add some depth to the data. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJncmFwaDI9Z3JhcGgxK2FlcyhmaWxsPUNvbnRleHQpXG5wcmludChncmFwaDIpIn0= To make it a grouped bar chart, a position argument is introduced. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJncmFwaDM9Z3JhcGgrZ2VvbV9jb2wocG9zaXRpb249XCJkb2RnZVwiKSthZXMoZmlsbD1Db250ZXh0KVxucHJpbnQoZ3JhcGgzKSJ9 Faceted graphs - these are related data plotted separately on the same image/diagram. The facet_grid() function is added to the variable graph3 to created faceted graphs based on the variable “Context”. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJncmFwaDQ9Z3JhcGgzK2ZhY2V0X2dyaWQofkNvbnRleHQpXG5wcmludChncmFwaDQpIn0= GGPlot randomly select colors to paint the graph but the biologist/statistician can use predefined colors as below. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJncmFwaDU9Z3JhcGg0K3NjYWxlX2ZpbGxfbWFudWFsKHZhbHVlcz1jKFwiYnJvd25cIiwgXCJibHVlXCIsIFwicmVkXCIpKVxucHJpbnQoZ3JhcGg1KSJ9 The background color can be modified to ones aesthetic taste. The theme() function along with relevant arguments to make the background color of your choice, in this its light blue. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJncmFwaDUrdGhlbWVfYncoYmFzZV9zaXplPTkpK3RoZW1lKHBhbmVsLmJhY2tncm91bmQgPSBlbGVtZW50X3JlY3QoZmlsbD1cImxpZ2h0Ymx1ZVwiKSkifQ== All of the above steps can be combined to come up with a decent graph from ggplot library. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJteV90aXRsZSA9IGV4cHJlc3Npb24ocGFzdGUoXCJDeXN0b3NpbmUgZGlzdHJpYnV0aW9uIGluIFwiLCBpdGFsaWMoXCJBcmFiaWRvcGlzIHRoYWxpYW5hXCIpKSkjRGVmaW5lIHRoZSB0aXRsZSBcblxuZ3JhcGhfZmluYWwgPSBnZ3Bsb3QobWV0aHlsYXRlZF9jLCBhZXMoeD1DaHJvbW9zb21lLCB5PUNvdW50X2luX21pbGxpb25zKSkrXG4gIGxhYnMoeD1cIkNocm9tb3NvbWVzXCIsIHRpdGxlID0gbXlfdGl0bGUpICtcbiAgZmFjZXRfZ3JpZCh+Q29udGV4dCkgK1xuICBnZW9tX2NvbChwb3NpdGlvbj1cImRvZGdlXCIpK1xuICBhZXMoZmlsbD1Db250ZXh0KStzY2FsZV9maWxsX21hbnVhbCh2YWx1ZXMgPSBjKFwiYnJvd25cIiwgXCJibHVlXCIsIFwicmVkXCIpKStcbiAgdGhlbWVfYncoYmFzZV9zaXplID0gOSkrdGhlbWUocGFuZWwuYmFja2dyb3VuZCA9IGVsZW1lbnRfcmVjdChmaWxsPVwibGlnaHRibHVlXCIpKVxuXG5wcmludChncmFwaF9maW5hbCkifQ== The expression is used to combine name italics and normal fonts - this helps biologists include botanical names in charts 6.4 Working with inbuilt iris data We have worked with iris data set before. In this topic we shall ask some questions and plot them on a box plot to cement our understanding in ggplot Plot a box plot to compare the sepal length in different iris species eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJncmFwaCA9IGdncGxvdChpcmlzLCBhZXMoeD1TcGVjaWVzLCB5PVNlcGFsLkxlbmd0aCkpKyAjIHRoZSBncmFwaCBza2VsZXRvblxuICBnZW9tX2JveHBsb3QoKSthZXMoZmlsbD1TcGVjaWVzKSAjIGFlc3RoZXRpY3NcblxucHJpbnQoZ3JhcGgpIn0= Virginica have higher sepal length however some virginica have less sepal length than versicolor Violin plot will show a better distribution than box plot eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJncmFwaCA9IGdncGxvdChpcmlzLCBhZXMoeD1TcGVjaWVzLCB5PVNlcGFsLkxlbmd0aCkpK1xuICBnZW9tX3Zpb2xpbigpK2FlcyhmaWxsPVNwZWNpZXMpXG5cbnByaW50KGdyYXBoKSJ9 Since some data cleaning and manipulation is required before diving deep into visualizations, a package tidyr is introduced. It can be installed by invoking the command below to the console. install.packages(&quot;tidyr&quot;) This package is a part of the tidyverse collection designed to make data cleaning and reshaping easy. It has multiple functions for instance gather(), spread(), pivot_wider(), pivot_longer(), separate(), unite() and fill(). In this section we shall not dive deep to explore tidyr package but we will borrow one of its important functions, gather() to manipulate iris data when plotting. This function, gather() is used to reshape data especially from a long format to a short format. Invoke the library eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJsaWJyYXJ5KHRpZHlyKSAjIGNhbiBiZSB1c2VkIHRvIGNvbnZlcnQgZnJvbSBzaG9ydCBmb3JtYXQgdG8gbG9uZyBmb3JtYXQifQ== Convert to a long format gather command is used to convert data into fewer columns. The columns from sepal length to petal width are to be merged to a single column called measurements eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjR2F0aGVyIGZyb20gc2VwYWwgbGVuZ3RoIHRvIHBldGFsIHdpZHRoIGNvbHVtbiBpbnRvIHR5cGUgYW5kIG1lYXN1cmVtZW50IGNvbHVtbiBcbmlyaXNfbG9uZyA9IGdhdGhlcihpcmlzLCB0eXBlLCBtZWFzdXJlbWVudCwgU2VwYWwuTGVuZ3RoOlBldGFsLldpZHRoLCBmYWN0b3Jfa2V5ID0gVFJVRSlcbnRhaWwoaXJpc19sb25nKSJ9 Lets plot the data to a box plot eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJncmFwaD1nZ3Bsb3QoaXJpc19sb25nLCBhZXMoeD1TcGVjaWVzLHk9bWVhc3VyZW1lbnQpKStcbiAgbGFicyh4PVwiU3BlY2llc1wiLCB5PVwiTGVuZ3RoIGluIGNtXCIsIHRpdGxlID0gXCJ2YXJpYXRpb24gaW4gUGV0YWxzIGFuZCBTZXBhbHMgb2YgSXJpcyBTcGVjaWVzXCIpK1xuICB0aGVtZShheGlzLnRleHQgPSBlbGVtZW50X3RleHQoYW5nbGU9OTApKStcbiAgZmFjZXRfZ3JpZCh+dHlwZSkrXG4gIGFlcyhmaWxsPVNwZWNpZXMpK1xuICBnZW9tX2JveHBsb3QoKVxuXG5wcmludChncmFwaCkifQ== the same can also be plotted to a violin plot eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJncmFwaD1nZ3Bsb3QoaXJpc19sb25nLCBhZXMoeD1TcGVjaWVzLHk9bWVhc3VyZW1lbnQpKStcbiAgbGFicyh4PVwiU3BlY2llc1wiLCB5PVwiTGVuZ3RoIGluIGNtXCIsIHRpdGxlID0gXCJ2YXJpYXRpb24gaW4gUGV0YWxzIGFuZCBTZXBhbHMgb2YgSXJpcyBTcGVjaWVzXCIpK1xuICB0aGVtZShheGlzLnRleHQgPSBlbGVtZW50X3RleHQoYW5nbGU9OTApKStcbiAgZmFjZXRfZ3JpZCh+dHlwZSkrXG4gIGFlcyhmaWxsPVNwZWNpZXMpK1xuICBnZW9tX3Zpb2xpbigpXG5cbnByaW50KGdyYXBoKSJ9 6.5 CODE CHALLENGE thyroid disease - https://www.kaggle.com/datasets/jainaru/thyroid-disease-data/data HR analytics dataset - https://www.kaggle.com/datasets/pavansubhasht/ibm-hr-analytics-attrition-dataset/data You will be required to retrieve the HR analytics employee attrition data set from kaggle. Click here to check out the data set. Read the data into an R data frame and answer the following questions using read.csv and ggplot2 libraries. Plot a histogram to show the distribution of age among the employees. Draw a boxplot to show the employees’ hourly rate in the sales department. Are there any outliers? What is the median employees’ hourly rate from the boxplot? How does age relate to monthly income? Are younger employees paid less? Plot a scatter plot to show the relationship between employees monthly income and age. Note:Age should be in the x axis How many male and female employees are their in the company? Are female employees more than male employees. Plot a bar chart to show. Are male employees retained retained more than the female employees in the company. Filter to retrieve the retained employees(“Attrition=”No”) only. What is the marital status of the employees in the Sales department? Filter the data to retrieve the sales department then plot the value count of each marital status in the filtered data set on a pie chart. Finally plot a heatmap to show the correlation of numeric columns. You will be required to download the thyroid disease csv file from here. It contains 13 clinicopathologic features aiming to predict recurrence of well differentiated thyroid cancer. The data set was collected in duration of 15 years and each patient was followed for at least 10 years. The data was procured from thyroid disease datasets provided by the UCI Machine Learning Repository. You will load the csv file into R data frame, read.csv, and solve the following questions. After the initial thyroid cancer treatment, has the disease recurred or not? Compare the two categories of patients (recurred and not recurred) using a bar chart. After physical examination of the thyroid gland and the surrounding structures, there were patients who had multinodular goiter, other single nodular gioters while rest of the patients had other complications. What are the composition of the patients? Plot a pie chart to show. Plot a grouped bar chart to show the average risk and age of thyroid disease between males and female patient. Risk and Age columns against gender. Plot a desnsity plot to show the distribution of age. Which age group is mostly affected by thyroid disease? "],["bioconductor.html", "Chapter 7 Bioconductor 7.1 Installing BiocManager Package 7.2 Searching and Analyzing the strings 7.3 Using seqinr 7.4 Using Short Read 7.5 CODE CHALLENGE", " Chapter 7 Bioconductor Bioconductor is a repository for high-quality, peer-reviewed software packages for the analysis and comprehension of high-throughput genomic data. It contained specific tools that handle, analyze and visualize data from high-throughput assays for instance ChIP-Seq, single-cell RNA-Seq and RNA-Seq. It provides data structures such as ExpressionSet,SummarizedExperiment, and GenomicRangesthat store and manipulate large scale genomic data. It also consists over 2000 packages just for data pre-processing, normalization, data analysis and visualization. Here are some of the popular packages in BioConductor has to offer; Biostrings: For efficient manipulation of large biological sequences. DESeq2: For differential gene expression analysis based on count data. GenomicRanges: For representing and manipulating genomic intervals and variables defined along a genome. AnnotationDbi: For handling and querying biological annotation databases. edgeR: Another popular package for differential expression analysis, particularly for RNA-Seq data. 7.1 Installing BiocManager Package To get started with Bioconductor, you need to install the BiocManager package, which facilitates the installation and management of Bioconductor packages. You can find detailed installation instructions in the official documentation. Load the required libraries eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJsaWJyYXJ5KEJpb3N0cmluZ3MpIn0= After loading the necessary libraries, you can read sequence data into R. For instance, if you have sequence data stored in a multifasta file named multifasta_seq.txt, you can use the readDNAStringSet() function. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzZXEgPSByZWFkRE5BU3RyaW5nU2V0KFwiZGF0YS9tdWx0aWZhc3RhX3NlcS50eHRcIilcbnNlcSJ9 Each genomic sequence can be viewed separately by indexing eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzZXFbWzFdXSAjZmlyc3QgZ2Vub21pYyBzZXF1ZW5jZVxuc2VxW1syXV0gIyBzZWNvbmQgZ2Vub21pYyBzZXF1ZW5jZSJ9 Convert to character to inspect its content. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJhcy5jaGFyYWN0ZXIoc2VxW1sxXV0pICJ9 The length function from base R is used to count the number of genomic sequences. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJsZW5ndGgoc2VxKSJ9 Names of the sequences eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJuYW1lcyhzZXEpIn0= view the first 6 sequences eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJoZWFkKHNlcSkifQ== Checking the reverse compliment of sequence eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzZXFfcmMgPSByZXZlcnNlQ29tcGxlbWVudChzZXFbWzFdXSlcbmhlYWQoc2VxX3JjKVxudGFpbChzZXFfcmMpXG5hcy5jaGFyYWN0ZXIoc2VxX3JjKSJ9 Sequence composition -default - calculate the DNA composition eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJjb21wb3NpdGlvbj1hbHBoYWJldEZyZXF1ZW5jeShzZXEpXG5wcmludChjb21wb3NpdGlvbikifQ== Specific composition - lets say we wanna look for A, T, G, C and N eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJjb21wb3NpdGlvbjE9bGV0dGVyRnJlcXVlbmN5KHNlcSwgbGV0dGVycz1jKFwiQVwiLFwiVFwiLCBcIkdcIiwgXCJDXCIsIFwiTlwiKSlcbnByaW50KGNvbXBvc2l0aW9uMSkifQ== Computing the GC Content eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJnY19jb250ZW50IDwtIGxldHRlckZyZXF1ZW5jeShzZXEsIGxldHRlcnM9XCJHQ1wiLCBhcy5wcm9iPVRSVUUpXG5nY19jb250ZW50In0= Calculate the mean of Gc content eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJtZWFuKGdjX2NvbnRlbnQpIn0= Standard deviation eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzZChnY19jb250ZW50KSJ9 eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJyYW5nZShnY19jb250ZW50KSJ9 Which GC has the maximum content eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzZXFbd2hpY2goZ2NfY29udGVudD09bWF4KGdjX2NvbnRlbnQpKV0ifQ== 7.2 Searching and Analyzing the strings A biologist can search for specific substrings within the sequences and analyze their positions and characteristics for instance; Search for substrings- in this case we search for \"GAATTC\" substring. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJFQ29SMT12Y291bnRQYXR0ZXJuKFwiR0FBVFRDXCIsIHNlcSlcbnByaW50KEVDb1IxKVxuXG5IaW5kSUlJID0gdmNvdW50UGF0dGVybihcIkFBR1RUXCIsIHNlcSlcbnByaW50KEhpbmRJSUkpIn0= Finding the position of substrings eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJIaW5kSUlJX3Bvcz12bWF0Y2hQYXR0ZXJuKFwiQUFHQ1RcIiwgc2VxKVxucHJpbnQoSGluZElJSV9wb3MpIn0= Translate eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIHRyYW5zbGF0ZShzZXFbWzJdXSlcbiNDaGVjayBmdW5jdGlvbnMgYXZhaWxhYmxlXG5tZXRob2RzKGNsYXNzID0gXCJETkFTdHJpbmdTZXRcIikifQ== 7.3 Using seqinr Another useful library in sequence analysis is seqinr. After installing the library by invoking install.packages(\"seqinr\") to the console, load it to the workspace eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJsaWJyYXJ5KHNlcWlucikifQ== Reading the fasta file containing the protein sequence using the read.fasta function. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJwcm9zZXEgPSByZWFkLmZhc3RhKGZpbGU9XCJkYXRhL3NwaWtlX211bHRpZmFzdGEudHh0XCIsIHNlcXR5cGU9XCJBQVwiKVxuc3RyKHByb3NlcSkifQ== Count the number of sequences eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJudW1fc2VxID0gbGVuZ3RoKHByb3NlcSlcbnByaW50KHBhc3RlKFwiTnVtYmVyIG9mIHNlcXVlbmNlcyA9IFwiLCBudW1fc2VxKSkifQ== Names of the sequences eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJuYW1lcz1nZXROYW1lKHByb3NlcSlcbm5hbWVzICJ9 Annotation of sequences eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJhbm5vdGF0aW9uIDwtIGdldEFubm90KHByb3NlcSlcbmFubm90YXRpb24ifQ== Length of individual sequences eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJsZW5fc2VxID0gZ2V0TGVuZ3RoKHByb3NlcSlcbmxlbl9zZXEifQ== Protein statistics eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJwcmludChBQXN0YXQocHJvc2VxW1sxXV0pKSJ9 It gives the type of proteins eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJmb3IgKGkgaW4gMTpudW1fc2VxKVxue1xuICBwcmludChuYW1lc1tpXSlcbiAgcHJpbnQoQUFzdGF0KHByb3NlcVtbaV1dKSlcbn0ifQ== Show commands in seqinr eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJsc2VxaW5yKCkifQ== 7.4 Using Short Read This library can be installed by invoking the BiocManager::install(\"ShortRead\") command to the console. load the library eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJsaWJyYXJ5KFNob3J0UmVhZCkifQ== Reading the fastq sequences eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJmcSA9IHJlYWRGYXN0cShcImRhdGEvZmlsZTIuZmFzdHFcIilcbmZxIn0= Preview of first 3 sequences eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJmcVsxOjNdIn0= Sequence information eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzcmVhZChmcSkifQ== Subset the sequence from second to fifth eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzcmVhZChmcVsyOjVdKSJ9 Inspect the quality of the sequence eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJxdWFsaXR5KGZxKSJ9 Number of sequence in the file eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJsZW5ndGgoZnEpIn0= Length of reads eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJyZWFkTGVuZ3RoID0gd2lkdGgoZnEpXG5yZWFkTGVuZ3RoIn0= generating the summary of fasta sequences eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJmcV9yZWFkcyA9IHNyZWFkKGZxKVxuXG5pZF9vZl9yZWFkcz1pZChmcSlcbmlkX29mX3JlYWRzWzE6NV1cbmZxX3JlYWRzIn0= Seq length - we can generate the sequence lenght by converting it to a dataframe eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzZXFfbGVuZ3RoID0gYXMuZGF0YS5mcmFtZShmcV9yZWFkc0ByYW5nZXNAd2lkdGgpXG5zZXFfbGVuZ3RoIn0= Quality scores eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJxdWFsaXR5X3Njb3Jlcz1xdWFsaXR5KGZxKVxucXVhbGl0eV9zY29yZXNbMTo1XSJ9 Convert the scores to matrix and see as real numbers eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJzY29yZXM9YXMocXVhbGl0eV9zY29yZXMsIFwibWF0cml4XCIpXG5zY29yZXMifQ== Mean score for each sequence eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJtZWFuX3Njb3JlX2Zvcl9lYWNoX3NlcXVlbmNlID0gcm93TWVhbnMoc2NvcmVzLCBuYS5ybT1UUlVFKVxubWVhbl9zY29yZV9mb3JfZWFjaF9zZXF1ZW5jZSJ9 Mean score for each position eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJtZWFuX3Njb3JlX2Zvcl9lYWNoX3Bvc2l0aW9uID0gcm93TWVhbnMoc2NvcmVzLCBuYS5ybT1UUlVFKVxubWVhbl9zY29yZV9mb3JfZWFjaF9wb3NpdGlvbiJ9 Plot a boxplot for the scores eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiJib3hwbG90KHNjb3JlcywgeGxhYj1cIlBvc2l0aW9uXCIsIHlsYWI9XCJQaHJlZCBzY29yZVwiKSJ9 7.5 CODE CHALLENGE In this code challenge you will be required to installed the Bioconductor locally as guided above. Thereafter, you will install MultiAssayExperiment package that is part of the Bioconductor project. Below is the code to install the MultiAssayExperiment locally; if (!requireNamespace(&quot;BiocManager&quot;, quietly = TRUE)) install.packages(&quot;BiocManager&quot;) BiocManager::install(&quot;MultiAssayExperiment&quot;) You will load the package along with the ggplot2 library and work on the genCov data. genCov data is an inbuilt data set from MultiAssayExperiment that contains simulated data showcasing the integration and analysis of multiple types of data from different assays. Challenge yourself with the following activities to get a clear understanding of genomic coverage data; Load the genCov using the code, data(\"genCov\", package = \"MultiAssayExperiment\"). Check the structure str() of the data set and calculate the descriptive statistics. Extract the coverage data with code experiments(genCov)[[\"coverage\"]] and store in a variable coverage_data. Display the first 6 records of the the data. Extract and inspect the genomic ranges from genCov with rowRanges() command. Display the first 6 genomic ranges. Plot a line chart of the \"Coverage\" against the \"Genomic Position\". Calculate the average coverage for each sample in the coverageData using colMeans() command. Display the result on a bar chart. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
